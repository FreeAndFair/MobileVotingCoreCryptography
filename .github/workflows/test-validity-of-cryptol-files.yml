# .github/workflows/test-validity-of-cryptol-files.yml
# Author: Daniel M. Zimmerman
# Created: 2025-05-01
# Modified: 2025-06-24

# This action uses Cryptol project files and the Cryptol remote API to
# typecheck all the Cryptol files in each project, but _not_ check
# their docstrings.

name: Test Validity of Cryptol Files

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
    paths:
      - '**.cry'
      - '**/cryproject.toml'

  push:
    branches:
      - 'main'

  workflow_dispatch:

jobs:
  build-matrix:
    name: Generate Matrix of Cryptol Projects
    runs-on: ubuntu-latest
    outputs:
      cryptol-project-dirs: ${{ steps.generate-matrix.outputs.cryptol-project-dirs }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Generate Matrix
        id: generate-matrix
        shell: bash
        run: |
          # Find all directories containing cryproject.toml files and
          # convert to JSON array
          dirs=$(find . -type f -name 'cryproject.toml' -exec dirname {} \; | xargs -0 -n1 printf "%s\n" | grep . | jq -R . | jq -s .)
          # Set the output using multiline syntax
          echo "cryptol-project-dirs<<EOF" >> $GITHUB_OUTPUT
          echo "$dirs" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  check-project:
    name: Check Cryptol Project
    needs: build-matrix
    runs-on: ubuntu-latest
    if: fromJson(needs.build-matrix.outputs.cryptol-project-dirs)[0] != null
    strategy:
      fail-fast: false
      matrix:
        cryptol-project-dir: ${{ fromJson(needs.build-matrix.outputs.cryptol-project-dirs) }}
    # Permissions are required to delete cache keys.
    permissions:
      actions: write
      contents: read
    env:
      # The path to the Cryptol cache for this project.
      CRYPTOL_CACHE: ${{ matrix.cryptol-project-dir }}/.cryproject/loadcache.toml
      # The key for the cache.
      CRYPTOL_CACHE_KEY: ${{ github.head_ref || github.ref_name }}-${{ matrix.cryptol-project-dir }}
      CRYPTOL_DEFAULT_KEY: main-${{ matrix.cryptol-project-dir }}
    container:
      # Note: we need a bleeding-edge image to support loading projects with docstrings;
      # unfortunately, the nightly image broke type inference for our code, so we're using
      # an explicit hash of an image that is known to handle it until we figure out how
      # to update it or, if this is a bug in Cryptol, until that bug is fixed.
      #
      # image: ghcr.io/galoisinc/cryptol-remote-api:nightly
      image: ghcr.io/galoisinc/cryptol-remote-api@sha256:d660b2ac08306d65211b0eed3b62a38b0c4b13ed389a72fe1f4ed4d3218393eb
      options: --user root
    steps:
      # First, install dependencies (GitHub CLI)
      - name: Install Dependencies
        run: |
          apt-get update && apt-get install -y git wget python3-pip python-is-python3
          pip install cryptol
      # Next, check out the repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # Here, we check out the submodules; we did not do that above, because
          # we don't want to actually do CI on all of `cryptol-specs`
          submodules: recursive
      # Next, start the Cryptol remote API
      - name: Start Cryptol Remote API
        run: |
          /usr/local/bin/cryptol-remote-api http --host 0.0.0.0 --port 8080 / &
      # Use our utility script to load the project
      - name: Load Cryptol Project
        run: |
          utils/cryptol/load_cryptol_project.py ${{ matrix.cryptol-project-dir }}
