/**
 * Smoke test of ElGamalâ€™s Cryptosystem in the context
 * of the direct product group of three components over
 * the NIST P-224 Elliptic Curve defined in [FIPS-186-5]
 *
 * @author Frank Zeyda (frank.zeyda@freeandfair.us)
 * @copyright Free & Fair 2025
 * @version 0.1
 */
module Primitives::ElGamal::Inst::ElGamal_P224_DP3_Test where

import Algebra::Groups::Inst::PFECGroupP224(bits)
import Primitives::ElGamal::Inst::ElGamal_P224_DP3
import Algebra::Encoders::Inst::Encoder_P224_DP3
import Algebra::Encoders::Inst::EncoderUtils_P224_DP3

/**
 * Simple testing function encrypting and decrypting five messages
 * that here consist of triplets of bitstrings to be encoded into
 * the underlying product group.
 */
main : [5][3][bits]
main = tv'dec
  where tv = [[0, 1, 2], [1, 2, 3], [5, 6, 7], [11, 12, 13], [23, 24, 25]]
        tv'enc = map Strict'Encode tv
        tv'run = map (gen_enc_dec 1 2) tv'enc
        tv'dec = map Strict'Decode tv'run

/**
 * Simple testing function encrypting and decrypting five messages
 * while producing additional trace output.
 *
 * @note The trace[Val] functions are currently not supported by
 * the Cryptol to Rust compiler; the code below does compile
 * but throws a runtime error (panic) when executed, indicating
 * that `trace` is not implemented yet.
 */
main'trace : [5][3][bits]
main'trace = traceVal "test result:" tv'dec
  where tv = traceVal "test vector:"
             [[0, 1, 2], [1, 2, 3], [5, 6, 7], [11, 12, 13], [23, 24, 25]]
        tv'enc = map Strict'Encode tv
        tv'run = map (gen_enc_dec 1 2) tv'enc
        tv'dec = map Strict'Decode tv'run
