#!/usr/bin/env python3
############################################################################
# Python 3 script to extract individual e2eviv.<N>.inst files from the     #
# cumulative instances.txt instances file generated by chocosolver.        #
# Usage: extract_instances.py <folder containing instances.txt file>       #
############################################################################
import sys, os, re

# Infer the name of the script.
SCRIPT_NAME = os.path.basename(sys.argv[0])

# ANSI escape sequences for fonts and colors
class ANSI:
  RESET   = "\033[0m"
  BOLD    = "\033[1m"
  BLACK   = "\033[1;30m"
  RED     = "\033[1;31m"
  GREEN   = "\033[1;32m"
  YELLOW  = "\033[1;33m"
  BLUE    = "\033[1;34m"
  MAGENTA = "\033[1;35m"
  CYAN    = "\033[1;36m"
  WHITE   = "\033[1;37m"

# Like print() put writes to stderr by default.
def eprint(*args, **kwargs):
  print(*args, file=sys.stderr, **kwargs)

# Outputs a debugging message (written to stderr).
def debug(msg):
  eprint(f"[{ANSI.CYAN}info{ANSI.RESET}] {msg.rstrip()}")

# Outputs an informative message (written to stdout).
def info(msg):
  print(f"[{ANSI.BLUE}info{ANSI.RESET}] {msg.rstrip()}")

# Outputs an warning message (written to stderr).
def warning(msg):
  eprint(f"[{ANSI.YELLOW}info{ANSI.RESET}] {msg.rstrip()}")

# Outputs an error message (written to stderr).
# This function aborts the script with an error code of 1.
def error(msg):
  eprint(f"[{ANSI.RED}error{ANSI.RESET}] {msg.rstrip()}")
  sys.exit(1)

# re.MULTILINE regex to find all instances in instances.txt.
INSTANCE_REGEX = re.compile(
  r"=== Instance (?P<index>\d+) Begin ===\n\n" +
  r"(?P<body>.*)\n"                            +
  r"--- Instance (?:\1) End ---\s+", re.MULTILINE | re.DOTALL)

# Removes all e2eviv.<N>.inst files under INSTANCES_DIR.
# Precondition: INSTANCES_DIR points to a valid instances directory.
def remove_inst_files():
  global INSTANCES_DIR
  assert(os.path.isdir(INSTANCES_DIR))
  info(f"erasing old e2eviv.<N>.inst files under '{INSTANCES_DIR}'")
  FILENAME_REGEX = re.compile(r"e2eviv.(\d+).inst")
  for filename in os.listdir(INSTANCES_DIR):
    if re.match(FILENAME_REGEX, filename):
      os.remove(os.path.join(INSTANCES_DIR, filename))

# Creates e2eviv.<N>.inst files according to instances.txt.
# Precondition: INSTANCES_DIR points to a valid instances directory.
# Precondition: INSTANCES_TXT points to a valid instances.txt file.
def create_inst_files():
  global INSTANCES_DIR
  global INSTANCES_TXT
  assert(os.path.isfile(INSTANCES_TXT))
  with open(INSTANCES_TXT) as file:
    lines = file.readlines()
    # remove all surplus white-spaces at the end of lines d
    content = '\n'.join([line.rstrip() for line in lines])
    # remove the c<N>_ prefix from all clafer names
    # Rhe lookbehind assertions ensures we are not in the middle of a name.
    content = re.sub(r'(?<![a-zA-Z0-9_$])c(0|[1-9]\d*)_', '', content)
  count = 0
  for (index, body) in re.findall(INSTANCE_REGEX, content):
    index = int(index) # convert index to integer
    OUTPUT_FILENAME = f"e2eviv.{index}.inst"
    OUTPUT_FULLPATH = os.path.join(sys.argv[1], OUTPUT_FILENAME)
    with open(OUTPUT_FULLPATH, 'w') as outfile:
      outfile.write(body)
    count += 1
  info(f"created {count} e2eviv.<N>.inst files under '{INSTANCES_DIR}'")

# Displays usage information and aborts the script with error code 1.
def usage():
  print(f"{ANSI.BOLD}usage{ANSI.RESET}: ", end='')
  print(f"{SCRIPT_NAME} <folder containing instances.txt file>")
  sys.exit(1)

# Main function of the script. Removes and (re)creates all .inst files.
def main():
  global INSTANCES_DIR
  global INSTANCES_TXT
  if len(sys.argv) == 2:
    if sys.argv[1].strip() in ['--help', '-help', '-h']:
      usage()
    INSTANCES_DIR = sys.argv[1]
    if os.path.exists(INSTANCES_DIR):
      if os.path.isdir(INSTANCES_DIR):
        if os.access(INSTANCES_DIR, os.W_OK):
          INSTANCES_TXT = os.path.join(INSTANCES_DIR, "instances.txt")
          if os.path.isfile(INSTANCES_TXT):
            remove_inst_files() # remove old e2eviv.<N>.inst files
            create_inst_files() # create all e2eviv.<N>.inst files
          else: error(f"no '{INSTANCES_TXT}' file found")
        else: error(f"'{INSTANCES_DIR}' seems not to be writable")
      else: error(f"'{INSTANCES_DIR}' is not a directory")
    else: error(f"folder '{INSTANCES_DIR}' does not exist")
  else: usage()

# Entry point of the script.
if __name__ == "__main__": main()
