// partof: Technical Requirements
// General functional requirements for digital election systems.
requirements Functional Requirements

// Reference: David Jefferson
Casting Atomic
Ballot casting shall be atomic with respect to server failures.

// Reference: David Jefferson
Deterministic Voting Process
If a server side failure occurs, no voter's balloting can be left in an unknown state.

// Reference: adapted from David Jefferson
Ballot Final States
The protocol shall support a system that ensures, for each ballot cast attempt, that either a ballot is securely and completely cast and the voter is marked as having voted, or no ballot is recorded as having been cast and the voter is not marked as having voted.

// Reference: David Jefferson
Vote Record Monotonicity
The protocol shall support a system with the following properties: 1) if the system and the law allows a voter to cast multiple votes with only the last one counting, or to cast a partial ballot with the option of modifying it later, then each voting session is atomic with respect to server failures; and 2) if a failure occurs during the voter's last session, then the votes cast as of his or her previous session will count.

Similar Receipt Freedom
The ability for a voter to use protocol-provided artifacts to prove to another party any information regarding how they voted in any race (beyond what is mathematically deducible from the final distribution of votes) must be similar to that for existing non-Internet absentee/remote voting mechanisms.

// Reference: David Jefferson
Multi Ballot Record
The protocol shall support a system such that, if it is permitted for voters to modify or replace their previously cast ballots, only the latest vote by each voter in each race shall be counted in the final tally.

// Reference: David Jefferson
No Double Vote
The protocol shall support a voting system that ensures not more than one vote for any voter in any race is recorded, when Multi Ballot Record is not supported.
