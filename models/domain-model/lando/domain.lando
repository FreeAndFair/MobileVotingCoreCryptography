system E2EVIV System
  An end-to-end verifiable Internet voting system.

indexing
  author: Joseph Kiniry <kiniry@freeandfair.us>, Daniel M. Zimmerman <dmz@freeandfair.us>
  organization: Free & Fair
  keywords: OVF, end-to-end verifiable internet voting, e2e, viv,
    verifiable elections, software independence,
    high-assurance, cryptography, verification, Free & Fair
  created: Tue Jul 15 16:18:09 PDT 2014
  revised: August 2024
  github: https://github.com/FreeAndFair/e2eviv -- doesn't exist yet pending copyright stuff


subsystem Core Concepts
  Core concepts generic to all elections.

  contains

  subsystem Background
    Background concepts relevant to elections in the general.

    contains

    // Source: NIST
    component Accessibility
        Measurable characteristics that indicate the degree to which a system is available to, and usable by, individuals with disabilities. The most common disabilities include those associated with vision, hearing, mobility, and cognition.

    component Contest
     A single decision or set of associated decisions being put before the voters (for example, the option of candidates to fill a particular public office or the approval or disapproval of a constitutional amendment). This term encompasses other terms such as "race," "question," and "issue" that are sometimes used to refer to specific kinds of contests. It does not refer to the legal challenge of an election outcome.


      What are your contest choices?
      Do you allow a write-in choice?
      What is the maximum number of your contest choices that can be chosen on the same ballot?
      What is your result?
      Does the vote contain valid choices for you?

      Your contest choices are the choices!
      You do/do not allow a write-in choice!
      Your result is the result!
      The maximum number of your contest choices can be chosen on the same ballot!

      A contest must have at least one contest choice.
      The result must contain information about every contest choice in the contest.
      The contest choices for a contest may only be set once.
      The write-in allowed flag may only be set once.
      The result for a contest may only be set once.
      The maximum number of contest choices that can be chosen on the same ballot may only be set once.

    // Source: NIST
    component Cryptographic End-To-End Verifiable Voting System
        A voting system that uses cryptographic techniques to store an encrypted copy of the voter's ballot selections while maintaining ballot secrecy and allows election outcomes to be independently and universally verified by members of the public. These voting systems provide voters with a special receipt of their cast ballot - one that allows them to verify their vote was included in the outcome but does not reveal to anyone how they voted.

    component Democracy
      Democracy is a system of government (of a nation, state, locality, or other organization) by an entire population or eligible members thereof, typically carried out through elections of leaders and representatives, through referenda, or both.

    // Source: ElectionGuard
    component Elected Office
      An office that is filled primarily or exclusively via an election.

    component Election
      A formal process in which qualified voters select choices in one or more contests.

    // Source: NIST
    component Election System inherit System
        1. A technology-based system that is used to collect, process, and store data related to elections and election administration. In addition to voter registration systems and public election websites, election systems include voting systems, vote tabulation systems, electronic poll books, election results reporting systems, and auditing devices. 2. Entire array of procedures, people, resources, equipment, and locations associated with conducting elections.

    // Source: ElectionGuard
    component Election System Software
      The executable code and associated configuration files needed for the proper operation of the election system.

    component Electorate
      The electorate for a given election comprises all the individuals that are eligible to vote in that election, according to applicable laws and regulations.

    // Source: NIST
    component Electronic Ballot Delivery
        The delivery of ballot and voter information packets electronically. The MOVE Act requires each state to provide for the electronic delivery (via fax, email, or an Internet-supported application) of ballots and related information from the local election office to the registered UOCAVA voter.

    // Source: NIST
    component Electronic Ballot Return
        The return of a voted ballot or voter information packet using electronic means. This can be by fax, email, or through the use of an Internet-supported application. Sometimes referred to as "Internet Voting".

    component E-Voting
      E-Voting, or electronic voting, is the process of voting either entirely using, or with substantial assistance from, electronic devices.

    // Source: NIST
    component Independently
        Without assistance from an election worker or other person.

    component Internet
      The Internet is a global system of interconnected computer networks that use the standard Internet Protocol suite to link billions of connected devices.

    // Source: ElectionGuard
    component Office
      A position established by law with certain associated rights and duties.

    // Source: NIST
    component Open Source
        Computer software with its source code (human readable code) made available with a license in which the copyright holder provides the rights to study, change, and distribute the software to anyone and for any purpose. Open source software may: be developed in a collaborative public manner; be reviewed by multiple professional and amateur programmers; require a fee and be licensed like other software; or be fully open source or may have only a portion of the software open source.

    component Party
      A party is an organized group of people having at least roughly similar political aims and opinions, that seeks to influence public policy by getting its candidates elected to public office.

    component Principle
      A fundamental truth or proposition that serves as a foundation for a system of belief or behavior or chain of reasoning.

    component Procedure
      A procedure is an established or official way of doing something.

    // Source: ElectionGuard
    component Seat
      An elected office position that a single officeholder may occupy for a fixed term.

    component System
      A system is a set of connected digital and physical parts, including computers, people, organizations, and more, forming a complex whole.

    // Source: NIST
    component Security Analysis
        An inquiry into the potential existence of security flaws in a voting system. Includes an analysis of the system's software, firmware, and hardware, as well as the procedures associated with system development, deployment, operation, and management.

    // Source: NIST
    component Usability
        Effectiveness, efficiency, and satisfaction with which a specified set of users can achieve a specified set of tasks in a particular environment. Usability in the context of voting refers to voters being able to cast valid votes as they intended quickly, without errors, and with confidence that their contest selections were recorded correctly. It also refers to the usability of the setup and operation of voting equipment in the polling place.

    component Voting Channel
      A voting channel is a method by which voters are enabled to vote in elections.

    // Source: NIST
    component Voting System
        Equipment (including hardware, firmware, and software), materials, and documentation used to: 1. define elections and ballot styles, 2. configure voting equipment, 3. identify and validate voting equipment configurations, 4. perform logic and accuracy tests, 5. activate ballots for voters, 6. record votes cast by voters, 7. count votes, 8. label ballots needing special treatment, 9. generate reports, 10. export election data including election results, 11. archive election data, and 12. produce records in support of audits.

    subsystem Elections
      Types and attributes of elections.

      component Digital Election
        An election carried out, in whole or in part, by electronic means.

      component Internet Election
        An election carried out, in whole or in part, using the Internet for the transmission of votes.

      component Supervised Election
        An election where election officials, and perhaps the public, watch over the election, primarily to ensure that voters have privacy when voting.

      component Remote Election
        An election in which some or all of the ballots are not cast at polling stations.

      component Traditional Election
        An election carried out entirely using physical ballots cast at polling stations during a fixed election period.

      component Unsupervised Election
        An election where there are no observers ensuring voter privacy.

      component Verifiable Election
        An election scheme whereby one or more formal properties of the election can be independently checked by voters or election officials.

    subsystem Processes
      A series of actions or steps taken in order to achieve a particular end.

      // Source: NIST
      component Access Control
          The process of granting or denying specific requests to:
          - obtain and use information and related information processing services; and
          - enter specific physical facilities.

      component Audit
        An audit is a review of the election artifacts to detect abnormalities and errors.

        Were any errors detected?

      component Benaloh Challenge
        A process used in e-voting systems for cast-as-intended verification.
        In a voting system that supports the Benaloh challenge, the voting application commits to an encryption of the ballot without knowing whether it is to be cast or checked. If the ballot is challenged, the ballot is then decrypted and displayed to the voter, allowing the voter to verify the candidates and choices they selected using the voting application are shown as chosen.

      component Candidate Registration
        The process by which a candidate is added to the candidates register.

      component Candidate Validation
        The process by which a candidate's identity and eligibility to stand for election are verified.

      // Source: SP 800-128
      component Configuration Control
          Process for controlling modifications to hardware, firmware, software, and documentation to protect the system against improper modifications before, during, and after system implementation.

      // Source: NIST
      component Configuration Management
          A continuous process of recording and maintaining consistent and reliable records pertaining to an organization's hardware and software composition, including software version control and hardware updates.

      // Source: NIST
      component Key Management
          Activities involving handling of cryptographic keys and other related security parameters (such as passwords) during the entire life cycle of the keys, including their generation, storage, establishment, entry and output, zeroization, and revocation.

      component Voter Registration
        Voter registration is the process by which a member of the electorate is added to the voters' register.

      component Voter Validation
        The process by which a voter's identity and eligibility to vote are verified.

      // Source: NIST
      component Voting Process
          Entire array of procedures, people, resources, equipment, and locations associated with conducting elections.

      // Source: NIST
      component Voting Session
          A collection of activities including ballot issuance, voter interaction with the vote-capture device, voting, verification, and casting.

      component Verification
        Verification is a process by which the the election protocols, processes, and device implementations are proven to be correct with respect to their specifications.


    end

  subsystem Election Day Artifacts
    Physical and digital artifacts relevant to election day.

    contains

    component Ballot
      Presentation of the contest options for a particular voter.

      What is your ballot style?
      Have you been cast?
      Have you been spoiled?
      What votes do you contain?
      What vote do you contain for the contest?

      Your ballot style is the style!
      You are cast!
      You are spoiled!
      You contain the vote for the contest!
      You no longer contain a vote for the contest!

      Initially a ballot is not cast, not spoiled, and contains no votes.
      A ballot's style may only be set once.
      Once a ballot is cast or spoiled, the set of votes it contains cannot be changed.
      Once a ballot is cast, it remains cast forever.
      Once a ballot is spoiled, it remains spoiled forever.
      A ballot cannot be both cast and spoiled.
      A ballot may contain at most one vote per contest.
      A ballot may only contain votes for contests that are part of its ballot style.

    // Source: NIST
    component Blank Ballot
        An issued ballot without any selections made.

    component Ballot Box
      A ballot box is the means by which ballots are stored pending being counted. It may take various forms, including physical containers (from which the name derives) and electronic storage media.

      Are you empty?
      Are you full?
      What is your capacity?
      How many ballots do you contain?
      What ballots do you contain?
      What seals are applied to you?
      Are you sealed?

      You contain the ballot!
      You no longer contain the ballot!
      The seal is applied to you!

      A ballot box is initially empty and has no seals.
      Only cast ballots may be added to a ballot box.
      Ballots that are not in a ballot box cannot be removed from the ballot box.
      A ballot box is sealed if and only if it has one or more unbroken seals applied to it.
      Ballots may not be added to a full or sealed ballot box.
      Ballots may not be removed from an empty or sealed ballot box.
      A ballot box's capacity is non-negative.
      A ballot box is full if and only if it contains a number of ballots equal to its capacity.

    component Ballot Configuration
      A ballot configuration is the set of contests in which voters of a particular group are eligible to vote.

      What contests do you contain?
      Are you locked?

      You contain the contest!
      You do not contain the contest!
      You are locked!

      A ballot configuration is initially unlocked and contains no contests.
      A contest may not be added to a ballot configuration more than once.
      Ballot configurations that contain no contests may not be locked.
      A contest may not be added to or removed from a locked ballot configuration.
      Once locked, a ballot configuration remains locked forever.

    // Source: NIST
    component Ballot Data
        A list of contests and associated options that may appear on a ballot for a particular election.

    component Ballot Question inherit Contest
      A question that appears on a ballot with options, usually in the form of an approval or rejection.


      The maximum number of choices that may be chosen on the same ballot is 1.
      Each choice represents a course of action.

    component Ballot Style
      Ballot data that has been put into contest order for a particular precinct or precinct split and considers a particular set of voter situations. Voter situations include party affiliation (for closed primaries), and age of the voter (in states that permit 17-year-olds to vote in primary elections), among others.

      What is your ballot configuration?
      What are the details of your presentation? // highly implementation dependent

      Your ballot configuration is the configuration!

      A ballot style's ballot configuration may only be set once.
      A ballot style's ballot configuration may only be set to a locked ballot configuration.

    component Bulletin Board
      A public platform where voting-related data is published and can be accessed by participants for verification purposes.

    component Candidates Register
      A candidates' register contains all the candidates standing for election and the offices for which they are standing.

      Do you contain the candidate?
      What candidates do you contain?
      Are you locked?

      You contain the candidate!
      You do not contain the candidate!
      You are locked!

      A register is initially empty and unlocked.
      A candidate may not be added to the register more than once.
      A candidate who is not in the register cannot be removed from the register.
      Candidates may not be added to or removed from a locked register.
      A locked register may not be unlocked.
      A candidate added to the register must be alive at the time of addition.

    // Source: NIST
    component Cast Ballot
        Ballot in which the voter has taken final action in selecting contest options and irrevocably confirmed their intent to vote as selected.

    // Source: NIST
    component Cast Vote Record (CVR)
        Archival tabulatable record of a set of contest selections produced by a single voter as interpreted by the voting system.

    component Contest Choice
      A votable choice that appears under a contest.

    component Contest For Office inherit Contest
      A contest for office is a selection of some subset of candidates standing for election to a particular office.

      The contest choices represent individual candidates for an office.

    // Source: NIST
    component Contest Selection
        A selection made on the ballot by a voter with respect to a specific single contest (for example, a candidate, the value "Yes" or "Approve").

    // Source: NIST
    component Direct Voter Associations (PII)
        A voter's personally identifiable information (PII) created or stored by the voting system that can be used to associate a voter with their ballot selections. Examples include first name, last name, address, driver's license, voter registration number, and other PII.

    // Source: NIST
    component Election Definition
        Data used in defining an election, including election districts, contests, candidates, and ballot style information.

    // Source: NIST
    component Electronic Voter Interface
        Component of an electronic vote-capture device that communicates ballot information to the voter and accepts contest selection input from the voter.

    // Source: NIST
    component Marked Ballot
        Ballot that contains all of a voter's selections.

    // Source: NIST
    component Overvote (Over-Vote)
        Occurs when the number of selections made by a voter in a contest is more than the maximum number allowed.

    // Source: ElectionGuard
    component Receipt
      A cryptographic artifact, generated by a cryptographic end-to-end verifiable voting system, that is associated with a single set of votes captured on a ballot.

    // Source: ElectionGuard
    component Record
      Preserved evidence of activities performed or results achieved (for example, forms, reports, test results).

    // Source: ElectionGuard
    component Report
      A self-contained, time-stamped, archival record, such as a printout or analogous electronic file, that is produced at a specific time and subsequently protected from modification.

    component Result
      A result is the outcome of a contest.

      What contest choices do you contain counts for?
      What is the count for the choice?

      The count for the choice is the number of votes!

      The count for each contest choice may only be set once.

    component Seal
      A seal provides some evidence of the integrity of another entity (such as a ballot or ballot box). Its form depends on the form of the entity being sealed, as well as other system characteristics.

      Are you applied?
      What are you applied to?
      Are you broken?

      You are applied to the entity!
      Break!

      A seal is initially not applied and not broken.
      A seal may only be applied if it has not previously been applied or broken.
      A seal may only be broken if it has not previously been broken.
      Once applied, a seal remains applied forever.
      Once broken, a seal remains broken forever.

    // Source: NIST
    component Spoiled Ballot
        A ballot that has been issued to a voter but will not be cast, usually because it has been incorrectly marked or impaired in some way.

    component Tally
      The tally is the count of all the votes in an election.

    component Vote
      Indication of support for a particular contest option.

      What contest choice do you represent?

      You represent the choice!

      The choice represented by a vote may only be set once.

    component Voters Register
      A voters' register contains all the voters eligible to vote in an election, as well as information indicating the ballot configuration each voter should use and whether each has participated in the election.

      Is the voter in the register?
      What ballot configuration should be used with the voter?
      Has the voter voted?

      Add the voter to the register!
      Remove the voter from the register!
      Set the voter's ballot configuration to the configuration!
      The voter has voted!

      A voter may not be added to the register more than once.
      A voter may not be removed from the register if he has voted.
      Once a voter is marked as having voted, he remains so marked forever.
      Once a voter is marked as having voted, his ballot configuration may not change.

    // Source: NIST
    component Voting Device
        Device that is part of the voting system.

    component Voting Interface
      A voting interface is the medium through which a voter makes his or her contest choices known to the voting system.

    // Source: NIST
    component Write-In Option
        A type of contest option that allows a voter to specify a candidate, usually not already listed as a contest option. Depending on election jurisdiction rules, in some cases only previously approved names will be considered as valid write-in contest selections.

    subsystem Physical Artifacts
      Physical artifacts relevant to election day.

      // Source: NIST
      component Device
        Physical apparatus and any supporting supplies, materials, and logic that together form a functional unit that performs assigned tasks as an integrated whole.

      component Physical Ballot Box inherit Ballot Box
        A physical ballot box is a box used to store paper ballots pending being counted.

        What is your chain of custody?

        Add the entry to your chain of custody!

        The capacity of a physical ballot box is finite.
        A physical ballot box may only be sealed with physical seals.
        A physical ballot box may only contain paper ballots.
        Entries may not be removed from the chain of custody.
        Each entry added to the chain of custody must represent one or more individuals.

      component Paper Ballot inherit Ballot
        A piece of paper, or multiple sheets of paper, on which all contest options of a given ballot style are printed.

      component Polling Station
        A polling station is a location at which physical ballot boxes and devices are available for members of the electorate to use during an election. Polling stations are typically staffed by poll workers and have well-publicized hours of operation.

      // queries, commands, constraints to do with legibility and
      // interpretation of voter intent?
      component Paper Vote inherit Vote
        A paper vote is a vote expressed with a paper ballot.

      component Physical Seal inherit Seal
        A physical seal is a piece of material (such as tape) that serves as evidence that a physical artifact has not been tampered with. Such a seal typically has a distinctive design and other features that make it obvious when a sealed artifact has been tampered with.

        What is your identifier?

        Your identifier is the identifier!

        The identifier of a physical seal may only be set once.

    subsystem Digital Artifacts
      Digital artifacts relevant to election day.

      component Digital Ballot inherit Ballot
        A digital ballot is a ballot comprised of one or more digital artifacts.

      component Digital Ballot Box inherit Ballot Box
        A digital ballot box is the electronic means by which digital ballots are stored pending being counted.

      component Digital Vote
        A vote expressed with a digital ballot.

      component Digital Seal inherit Seal
        A digital seal is a piece of evidence that a digital artifact has not been tampered with. Such seals typically take the form of cryptographic hashes.

    end

  subsystem People
    The people that are part of an electoral system. These are the most general concepts explaining roles in an election from a legal standpoint. Personas, as specified in the Personas subsystem, further concretize these general classes into specific UX-centric roles.

    // Source: NIST
    component Administrator (admin)
      A voting system user with the highest level of access.

    // various constraints apply to candidates for various offices,
    // depending on the office (e.g., >= 35 yrs old, permanent
    // resident in the U.S. for >= 14 yrs, and born a U.S.
    // citizen are constraints on candidates for President of the
    // United States).
    component Candidate inherit Citizen
      Person contending in a contest for office. A candidate may be explicitly presented as one of the contest options or may be a write-in candidate.

    component Citizen inherit Person
      A citizen is a person who legally belongs to a place and has the rights and protections of that place. The place can be at any election scope; for example, a particular person may be a citizen of the United States, of Oregon, and of Portland simultaneously.

      What is your current residence address?
      What is your citizenship information?

      Your current residence address is the address!
      Your citizenship information is the information!

    component Electoral Authority
      An electoral authority is an individual or group responsible for setting up, running, and disclosing the results of an election. Some members of an electoral authority may not have access to perform all of these functions.

      Who are your members?

      The citizen is one of your members!
      The citizen is not one of your members!

      An electoral authority must have at least one member.

    // Source: NIST
    component Election Official
        Any person who is involved with administering or conducting an election, including government personnel and temporary election workers. This may include any county clerk and recorder, election judge, member of a canvassing board, central election official, election day worker, member of a board of county commissioners, member or secretary of a board of directors authorized to conduct public elections, representative of a governing body, or other person engaged in the performance of election duties as required by the election code.

    component Election Administrator inherit Election Official
      An election administrator is an individual with access to set up, run, and disclose the results of an election. Election administrators are election officials and members of electoral authorities.

    component Identity
      The fact of being who or what a person or system is.

    // Source: CNSSI 4009, Adapted
    component Insider
        Any person with authorized access to any organizational resource, to include personnel, facilities, information, equipment, networks, or systems.

    component Person
      A person is an individual with a unique identity.

      What is your name?
      What is your date of birth?
      Are you alive?

      Your name is the name!
      Your date of birth is the date!
      You are not alive!

      A person is initially alive.
      A person's date of birth may only be set once.
      A person's date of birth must be in the past.
      Once a person is not alive, he stays not alive forever.

    component Voter inherit Citizen
      A person who is eligible to cast a ballot in an election.

      What groups are you in?

      You are in the group!
      You are not in the group!

    component Trustee inherit Person
      A trustee is a person who has the responsibility to participate in specific ceremonies (key generation, homomorphic tallying, shuffling and decryption) critical to an E2E-V election.

    component Verifier inherit Person
      A verifier is a person who chooses to verify the results of the election after it is completed. Verifiers need not be citizens, or otherwise connected to the election process in any way.

  subsystem Properties
    Properties of elections and related artifacts.

    contains

    //indexing
    //applicable_law: "http://www.section508.gov"
    component Accessible
      An artifact is accessible if it is usable by and useful to the disabled. The details of such a notion are often codified in federal law (e.g., U.S. Section 508) and are the results of researchers focused on user experiences for the disabled.

    component Authenticated
      A person or system that has properly identified itself.

    // Source: SP800-53
    component Authenticity
        The property of being genuine and being able to be verified and trusted; confidence in the validity of a transmission, message, or message originator. See authentication.

    component Confident
      A person or system that is certain about a proposition.

    component Digital
      An artifact that is manifested via information, rather than as a tangible artifact.

    component Disabled
      An individual is disabled if he or she has a physical or mental condition that limits movements, senses, or activities in a way that affects his or her ability to participate in an election.

    component Efficient
      A system that operates in a productive fashion with little wasted effort or expense.

    // Source: NIST
    component Failure
        Looking at voting system reliability, a failure is an event that results in: loss of one or more functions, degradation of performance resulting in a device that is unable to perform its intended function, automatic reset, restart, or reboot of the voting device, operating system or application software, requiring an unanticipated intervention by a person in the role of election worker or technician before normal operation can continue, or error messages or audit log entries indicating that a failure has occurred.

    // Source: NIST
    component Fault
        Flaw in design or implementation that may result in the qualities or behavior of the voting system deviating from the qualities or behavior that are anticipated, including those specified in the VVSG or in manufacturer-provided documentation.

    component Remote
      Something is remote if it is located somewhere other than a polling station.

    component Robust
      A process or system is robust if it is able to withstand adverse conditions.

    component Physical
      Manifested as a tangible artifact.

    component Supervised
      A person or system that is directly observed.

    component Turnout
      Turnout is the level of participation of voters in a contest.

    component Unsupervised
      A person or system that has no observers.

    component Verifiable
      A system or algorithm is verifiable if it has properties that can be checked by people or digital systems.

    subsystem Election Properties
      Properties specific to elections.

      contains

      component Security
        Security is the attestation that a system is free of certain classes of dangers or threats.

      subsystem Scope
        The geographic or logical area affected by an election.

        component International
          An international scope is comprised of multiple nations; for example, the European Union.

        component Local
          A local scope is comprised of a single locality or a small group of localities. Examples include individual towns and counties.

        component National
          A national scope is comprised of a single nation.

        component Regional
          A regional scope is comprised of a large group of localities or a single state, territory, or similar region. For example, the state of California.

      end

    subsystem System Properties
      Properties held by election systems, digital or physical.

      component Accessible
        An artifact is accessible if it is usable by and useful to the disabled. The details of such a notion are often codified in federal law (e.g., U.S. Section 508) and are the results of researchers focused on user experiences for the disabled.

        //indexing
        //applicable_law: "http://www.section508.gov"
        //this comment parses incorrectly it is attached to reliable but it should be attached to accessible.

      // Source: NIST
      component Ballot Secrecy
          A goal of voting systems to ensure that no contest selections can be associated with a voter.

      // Source: NIST
      component Fault-Tolerant
          A system that continues to operate after the failure of a computer or network component.

      // Source: NIST
      component Privacy
          A property of a voting system that is designed and deployed to enable voters to obtain a ballot, and mark, verify, and cast it without revealing their ballot selections or selections of language, display and interaction modes to anyone else. This does not preclude the ability of a voter to request assistance under state law.

      component Reliable
        An artifact is reliable if it is guaranteed to be available for use, and to work properly, for a specified percentage of time.

        What is your reliability percentage?

        The reliability percentage must be between 0 and 100, inclusive.

      // Source: NIST
      // See "On the notion of 'software independence' in voting systems" by Ronald L. Rivest and John P. Wack
      component Software Independence (SI)
          Quality of a voting system or voting device where a previously undetected change or fault in software cannot cause an undetectable change or error in election outcome. In practice, voting systems are generally viewed as possessing the quality of software independence when they allow for a voter-verifiable paper record of voters' contest selections to be created and compared against vote totals or against an electronic cast vote record used in determining vote totals.

      component Usable
        An artifact is usable if it can successfully be used for its stated purpose.

    end

  subsystem Systems
    The concepts related to digital systems in general.

    // Source: NIST
    component Air Gap
        A physical separation between systems that requires data to be moved by some external, manual procedure.

    // Source: SP 800-37
    component Application
        A software program hosted by an information system.

    // Source: ISO/IEC 15026, Adapted
    component Assurance
        Grounds for justified confidence that a [security or privacy] claim has been or will be achieved. Note 1: Assurance is typically obtained relative to a set of specific claims. The scope and focus of such claims may vary (e.g., security claims, safety claims) and the claims themselves may be interrelated. Note 2: Assurance is obtained through techniques and methods that generate credible evidence to substantiate claims.

    // Source: NIST
    component Authentication
        Verifying the identity of a user, process, or device, often as a prerequisite to allowing access to resources in an information system.

    // Source: NIST
    component Authentication Token (Token)
        Something a user possesses and controls, typically a key or password, that is used to authenticate an identity.

    // Source: SP800-53
    component Authenticator
        Something that the claimant possesses and controls (typically a cryptographic module or password) that is used to authenticate the claimant’s identity. This was previously referred to as a token.

    // Source: CNSSI 4009
    component Authorization
        Access privileges granted to a user, program, or process or the act of granting those privileges.

    // Source: SP800-123
    component Availability
        Ensuring that information is accessible by authorized users.

    // Source: NIST
    component Confidentiality
        Prevention of unauthorized disclosure of information.

    // Source: SP800-123
    component Compromise Recording
        Records and logs should be maintained so that if a compromise does occur, evidence of the attack is available to the organization. This information can assist in securing the network and host after the compromise and aid in identifying the methods and exploits used by the attacker. This information can be used to better secure the host or network in the future. In addition, these records and logs can assist organizations in identifying and prosecuting attackers.

    // Source: SP 800-63-3
    component Credential
        An object or data structure that authoritatively binds an identity, via an identifier or identifiers, and (optionally) additional attributes, to at least one authenticator possessed and controlled by a subscriber.

    // Source: ISO 25237
    component De-Identification
        General term for any process of removing the association between a set of identifying data and the data subject.

    // Source: IR 8062
    component Disassociability
        Enabling the processing of personally identifiable information or events without association to individuals or devices beyond the operational requirements of the system.

    // Source: NIST
    component Extensible Markup Language (XML)
        A text-based language used to organize and present information on the World Wide Web.

    // Source: NIST
    component Firewall
        A gateway system designed to prevent unauthorized access to a private network or intranet that is connected to the internet. A firewall can be implemented in either hardware or software, or a combination of both.

    // Source: SP800-123
    component Hardening
        Configuring a host’s operating system and applications to reduce the host’s security weaknesses.

    // Source: SP800-145
    component Hybrid Cloud
        The cloud infrastructure is a composition of two or more distinct cloud infrastructures (private, community, or public) that remain unique entities, but are bound together by standardized or proprietary technology that enables data and application portability (e.g., cloud bursting for load balancing between clouds).

    // Source: FIPS 201-2
    component Identifier
        Unique data used to represent a person’s identity and associated attributes. A name or a card number are examples of identifiers. A unique label used by a system to indicate a specific entity, object, or group.

    // Source: CNSSI 4009
    component Internal Network
        A network where the establishment, maintenance, and provisioning of security controls are under the direct control of organizational employees or contractors. Cryptographic encapsulation or similar security technology implemented between organization-controlled endpoints provides the same effect (at least regarding confidentiality and integrity). An internal network is typically organization-owned yet may be organization-controlled while not being organization-owned.

    // Source: SP800-123
    component Integrity
        Ensuring the authenticity of information—that information is not altered, and that the source of the information is genuine.

    // Source: CNSSI 4009
    component Network
        A system implemented with a collection of connected components. Such components may include routers, hubs, cabling, telecommunications controllers, key distribution centers, and technical control devices.

    // Source: SP800-145
    component Private Cloud
        The cloud infrastructure is provisioned for exclusive use by a single organization comprising multiple consumers (e.g., business units). It may be owned, managed, and operated by the organization, a third party, or some combination of them, and it may exist on or off premises.

    // Source: NIST
    component Product Standard
        Standard that specifies requirements to be fulfilled by a product or a group of products, to confirm it can perform its intended task.

    // Source: SP800-145
    component Public Cloud
        The cloud infrastructure is provisioned for open use by the general public. It may be owned, managed, and operated by a business, academic, or government organization, or some combination of them. It exists on the premises of the cloud provider.

    // Source: NIST
    component Security Controls
        Management, operational, and technical controls (that is, safeguards or countermeasures) prescribed for an information system to protect the confidentiality, integrity, and availability of the system and its information.

    // Source: SP800-123
    component Separation of Privilege
        Functions, to the degree possible, should be separate and provide as much granularity as possible. This can apply to systems and system operators/users. In the case of systems, functions such as read, edit, write, and execute should be separate. In the case of system operators/users, roles should be as separate as possible.

  subsystem Cryptography
    Discipline that embodies the principles, means, and methods for transforming data to hide their semantic content, prevent their unauthorized use, prevent their undetected modification, or establish their authenticity.

    contains

    subsystem Core Concepts
      The core concepts of cryptography.

      contains

      // Source: Wikipedia, NSA
      component Code
        A substitution cryptosystem in which the plaintext elements are primarily words, phrases, or sentences, and the code equivalents (called "code groups") typically consist of letters or digits (or both) in otherwise meaningless combinations of identical length.

      // Source: Wikipedia
      component Cipher
        An algorithm used in cryptography to convert plain text into encrypted text (ciphertext) by transforming individual characters or bits of information. Unlike codes, which substitute entire words or phrases, ciphers operate at a more granular level, manipulating letters, numbers, or binary data to obscure the original message.

      // Source: NIST
      component Decryption
        The process of transforming ciphertext into plaintext using a cryptographic algorithm and key.

      // Source: NIST
      component Encryption
        Cryptographic process of transforming data (plaintext) into a form (ciphertext) that conceals the data's original meaning to prevent it from being known or used. Encryption provides confidentiality protection.

      // Source: Wikipedia
      component Forward Secrecy
        A feature of specific key-agreement protocols that gives assurances that session keys will not be compromised even if long-term secrets used in the session key exchange are compromised. A stolen long-term secret alone cannot be used to generate previous session keys and a stolen session key cannot be used to generate previous or subsequent session keys. However, a stolen long-term secret can be used in a man-in-the-middle attack to compromise subsequent session keys.

      component Hash
        A mathematical algorithm that takes an input (or "message") and produces a fixed-size string of characters, known as the hash value or digest. It is designed to meet specific security properties of pre-image resistance, second pre-image resistance, and collision resistance.

      // Source: Wikipedia
      component Mode
        A block cipher by itself is only suitable for the secure cryptographic transformation (encryption or decryption) of one fixed-length group of bits called a block. A mode of operation describes how to repeatedly apply a cipher's single-block operation to securely transform amounts of data larger than a block.

      // Source: NIST SP 800-133 Rev. 2
      component Nonce
        A time-varying value that has (at most) an acceptably small chance of repeating. For example, the nonce may be a random value that is generated anew for each use, a timestamp, a sequence number, or some combination of these.

      // Source: ElectionGuard
      component Protocol
        A cryptographic algorithm among multiple communicating parties.

      // Source: Wikipedia
      component Salt
        Random data added to the input of a hash function to make each hash unique, even for identical inputs. It is a countermeasure against precomputed attacks like rainbow tables and makes it harder to crack multiple password hashes simultaneously​.

      // Source: NIST
      component Security Strength
        A metric associated with the amount of work (that is, the number of operations) that is required to break a cryptographic algorithm or system.

      // Source: Wikipedia
      subsystem Algorithm Designs
        A listing of multiple different designs of cryptographic algorithms and their related concepts.

        // Source: Wikipedia
        component Feistel Network
          A symmetric structure used in the design of many block ciphers, that ensures both encryption and decryption use very similar operations. In a Feistel Network, the input block is divided into two halves, and in each round, one half is modified based on the output of a function applied to the other half and a subkey. The two halves are then swapped before moving to the next round. Decryption simply reverses the process by applying the same function in the reverse order of subkeys.

        // Source: Wikipedia
        component Key Schedule
          An algorithm that expands a relatively short encryption key into multiple subkeys used in successive rounds of encryption or decryption within a block cipher. It is critical in determining the strength of the encryption because it helps avoid repeated patterns in the ciphertext.

        // Source: Wikipedia
        component Lai Massey Scheme
          A cryptographic structure used in block cipher design, similar to the Feistel Network, but with distinct properties. Like the Feistel Network, it divides the input data into two equal parts for processing. However, instead of applying the round function directly to one half, the Lai-Massey scheme applies the round function to the difference between the two halves. The result of the round function is then combined with both halves of the input block, rather than just one.

        // Source: Wikipedia
        component Product Cipher
          A type of cryptographic cipher that combines two or more transformations in a manner intending that the resulting cipher is more secure than the individual components to make it resistant to cryptanalysis. The product cipher combines a sequence of simple transformations such as substitution (S-box), permutation (P-box), and modular arithmetic.

        // Source: Wikipedia
        component Substitution Box (S-box)
          A fundamental component in symmetric key cryptography used to perform substitution during encryption. Its primary role is to introduce non-linearity. The S-box takes a fixed number of input bits and transforms them into output bits in a way that obscures the relationship between the ciphertext and the encryption key.

        // Source: Wikipedia
        component Permutation Box (P-box)
          A fundamental component in symmetric key cryptography used to achieve diffusion. The P-box takes bits from the input and rearranges them in a deterministic manner, scattering their positions. This spreading of bits ensures that changes in one part of the input will affect many parts of the output.

        // Source: Wikipedia
        component Substitution-Permutation Network (SPN)
           A series of linked mathematical operations used in block cipher algorithms. The SPN takes a block of the plaintext and the key as inputs, and applies several alternating rounds or layers of substitution boxes (S-boxes) and permutation boxes (P-boxes) to produce the ciphertext block.

        // Source: wikipedia
        component Avalanche Effect
          The desirable property of cryptographic algorithms, typically block ciphers and cryptographic hash functions, wherein if an input is changed slightly (for example, flipping a single bit), the output changes significantly (e.g., half the output bits flip). In the case of high-quality block ciphers, such a small change in either the key or the plaintext should cause a drastic change in the ciphertext.

        // Source: Wikipedia
        component Block Size
          The fixed-length group of bits that a block cipher processes during encryption and decryption. Block ciphers operate by transforming these blocks of data, and the size of the block directly impacts the security and efficiency of the algorithm. Both the input (plaintext) and output (ciphertext) are the same length.

        // Source: Wikipedia
        component Key Size
          The length of a key used by an encryption algorithm, measured in bits. The key size determines the upper limit of security against brute force attacks, where an attacker tries every possible key combination. The larger the key size, the more potential combinations, making it harder to break the encryption by brute force.

        // Source: Wikipedia
        component Key Whitening
          A cryptographic technique used to enhance the security of block ciphers by combining the input data with portions of the key, usually through XOR operations, before the encryption process begins and after it ends. This ensures that even if the core cipher is broken or weakened, the overall encryption remains difficult to crack without the full key.

        // Source: Wikipedia
        component Elliptic Curve Cryptography (ECC)
          A type of public-key cryptography based on the mathematical properties of elliptic curves over finite fields. It provides similar levels of security to traditional systems like RSA but uses significantly smaller key sizes. ECC relies on the difficulty of solving the Elliptic Curve Discrete Logarithm Problem (ECDLP), which involves finding a scalar multiplier given two points on an elliptic curve.

        // Source: Wikipedia
        component Discrete Logarithm
           The inverse operation of exponentiation in a finite group, analogous to finding a regular logarithm in real numbers. The problem is considered computationally intractable by classical computers, meaning there is no efficient algorithm to solve it for large values, making it a cornerstone of several cryptographic systems. However, advances in quantum computing pose a threat to cryptographic systems relying on the intractability of the problem.

      subsystem Authenticated Encryption Modes
        Modes of operation of the Advanced Encryption Standard symmetric cipher that guarantee both data confidentiality and data authenticity.

        // Source: Wikipedia
        component Counter with CBC-MAC (CCM)
           A mode of operation for block ciphers that works by encrypting the data using the counter mode for confidentiality and generating a MAC using CBC for data integrity. CCM is a two-pass mode, meaning it encrypts and then authenticates, making it slightly slower than some single-pass modes like GCM.

        // Source: Wikipedia
        component Carter-Wegman + CTR (CWC)
          A mode of operation for block ciphers that works by encrypting the data using the counter mode (CTR) for confidentiality and the Carter-Wegman Message Authentication Code (MAC) for integrity. This mode offers both confidentiality and message integrity in a single pass.

        // Source: Wikipedia
        component Encrypt then Authenticate then Translate (EAX)
          A mode of operation for block ciphers that works by encrypting the data using a block cipher without restrictions for confidentiality in the first pass and a MAC for authentication in the second pass. This mode allows for authentication of additional data that is not encrypted, known as Associated Data (AD).

        // Source: Wikipedia
        component Galois Counter Mode (GCM)
          A mode of operation for block ciphers that works by encrypting the data using the counter mode (CTR) for confidentiality and Galois field multiplication for integrity in a single pass. This mode allows for authentication of additional data that is not encrypted, known as Associated Data (AD).

        // Source: Wikipedia
        component Integrity-Aware Parallelizable Mode (IAPM)
          A mode of operation for block ciphers that was created to be highly efficient and parallelizable. This mode uses two independent keys for both encryption and integrity verification, and its structure allows for parallel processing of both encryption and authentication in a single pass.

        // Source: Wikipedia
        component Offset Codebook Mode (OCM)
          A mode of operation for block ciphers that works by combining each plaintext block with a unique offset value derived from a nonce. The data is then encrypted, and a final authentication tag is generated to verify the integrity of the ciphertext in a single pass. This mode allows for parallel processing.

      subsystem Standardization
        Official United States Government standards for cryptography.

        // Source: Wikipedia
        component Commercial National Security Algorithm Suite (CNSA)
          A set of cryptographic algorithms promulgated by the National Security Agency as a replacement for NSA Suite B Cryptography algorithms. It serves as the cryptographic base to protect US National Security Systems information up to the top secret level, while the NSA plans for a transition to quantum-resistant cryptography.

        // Source: Wikipedia
        component Federal Information Processing Standards (FIPS)
          A set of U.S. government standards developed by the National Institute of Standards and Technology (NIST) to ensure computer security and interoperability in federal agencies. These standards cover various areas, such as cryptography, data processing, and secure communications. They are primarily intended for use in non-military federal government applications, but they are often adopted by private organizations seeking strong security protocols. One notable standard in the FIPS series is FIPS 140, which defines security requirements for cryptographic modules.

        // Source: Wikipedia
        component Suite B Cryptography
           A set of cryptographic algorithms developed by the NSA as part of its Cryptographic Modernization Program to provide security for both classified and unclassified communications. It included several key components: Advanced Encryption Standard (AES), Elliptic Curve Cryptography (ECC), and Secure Hash Algorithm (SHA). Suite B was phased out in 2018 and replaced by the Commercial National Security Algorithm Suite (CNSA), as part of a transition to quantum-resistant cryptographic methods.

        end

    subsystem Threats
      Concepts related to attacks on cryptographic primitives.

      contains

      subsystem General Attacks
        Attacks that are not algorithm specific but apply in a block box manner.

        component Brute Force
          Cryptographic algorithm designs acknowledge the possibility of an attacker guessing certain values correctly and defeating the stated security claims. The algorithms are designed to make the probability of a correct guess negligible. This attack consists of an attacker simply guessing and checking a vast number of potential values until a correct value is found. This attack applies to keys for symmetric and asymmetric cryptography algorithms as well as inputs to hash functions.

        // Source: Wikipedia
        component Man in the Middle (MITM)
          An attack where the attacker secretly relays and possibly alters the communications between two parties who believe that they are directly communicating with each other. In a successful attack, the reading or altering of the communications allows the attacker to break stated security properties of the protocol. As it aims to circumvent mutual authentication, a MITM attack can succeed only when the attacker impersonates each party sufficiently well to satisfy the expectations of the other party.

        // Source: Wikipedia
        component Side Channel
          Any attack based on extra information that can be gathered because of the fundamental properties of a specific implementation of a protocol or algorithm, rather than flaws in the design of the protocol or algorithm itself. Timing information, power consumption, electromagnetic leaks, and sound are examples of extra information that could be exploited to facilitate side-channel attacks. Some side-channel attacks require technical knowledge of the internal operation of the system, while others such as differential power analysis are effective as black-box attacks.

      subsystem Hash Attacks
        Attacks on cryptographic hash functions.

        contains

        // Source: Wikipedia
        subsystem Collision Attacks
          An attack where the attacker attempts to find two different inputs that produce the same output when processed by a cryptographic hash function.

          contains

          // Source: Wikipedia
          component Birthday Attack
            A brute force collision attack exploiting the mathematics behind the birthday problem in probability theory. The birthday problem arises from the significantly higher probability of finding a pair of any two people in a group who share the same birthday compared to finding a second person with the same birthday as a given a person. The attacker generates many different input values and checks if any two inputs have the same hash value causing a hash collision.

          // Source: Wikipedia
          component Classical Collision Attack
            A type of collision attack where the attacker seeks to find two different messages m1 and m2 such that hash(m1) = hash(m2).

          // Source: Wikipedia
          component Chosen-Prefix Collision Attack
            A type of collision attack where the attacker attempts to find two suffixes s1 and s2 for given prefixes p1 and p2 such that hash(p1 ∥ s1) = hash(p2 ∥ s2), where ∥ denotes the concatenation operation.

          end

        // Source: Wikipedia
        subsystem Preimage Attacks
          An attack where the attacker attempts to find an input to a cryptographic hash function which results in a given output.

          contains

          // Source: Wikipedia
          component First Preimage Attack
            A type of preimage attack where the attacker seeks to find an input x given an output y, such that hash(x) = y.

          // Source: Wikipedia
          component Second Preimage Attack
            A type of preimage attack where the attacker seeks to find an input x' given another input x such that hash(x) = hash(x').

          end

        // Source: Wikipedia
        component Rainbow Attack
          An attack where the attacker precomputes and caches the output of a cryptographic hash function in a specific structure called a rainbow table. The rainbow table stores only the starting and ending values of a chain of hash values. Searching a rainbow table requires generating a hash chain for the queried value and checking the table for that hash chain. This is a space and time efficient method to search for and possibly retrieve an input that also results in the queried hash value. The attack is frequently used to find a password that results in a given password hash. Rainbow attacks can be mitigated by adding a salt to the hash function.

        // Source: Wikipedia
        component Length Extension Attack
          A type of attack where an attacker can use Hash(message1) and the length of message1 to calculate Hash(message1 ‖ message2) for an attacker-controlled message2, without needing to know the content of message1. Concatenation is denoted here as ‖. Hash functions that work by taking the input message and using it to transform an internal state and then output the entire internal state are vulnerable to this attack. The attacker reconstructs the entire internal state using the message1 hash value and uses it to process additional data creating the new output value.

        end

      subsystem Block Cipher Attacks
        Concepts related to attacks and cryptanalysis of block ciphers.

        // Source: Wikipedia
        component Linear Cryptanalysis
          A general form of cryptanalysis based on finding affine approximations to the action of a cipher. The attack involves identifying linear expressions that approximate the relationships among plaintext, ciphertext, and key bits with a certain probability, then analyzing biases in the output to deduce information about the secret key. Its effectiveness relies on the quality of these approximations and the volume of known plaintext/ciphertext pairs available for analysis.

        // Source: Wikipedia
        component Differential Cryptanalysis
          A general form of cryptanalysis based on the study of how differences in information input can affect the resultant difference at the output. The basic method uses pairs of plaintexts related by a constant difference. The attacker then computes the differences of the corresponding ciphertexts, hoping to detect statistical patterns in their distribution. The resulting pair of differences is called a differential. For any particular cipher, the input difference must be carefully selected for the attack to be successful. An analysis of the algorithm's internals is undertaken; the standard method is to trace a path of highly probable differences through the various stages of encryption, termed a differential characteristic.

        // Source: Wikipedia
        component Integral Cryptanalysis
          A general form of cryptanalysis using sets or  multisets of chosen plaintexts of which part is held constant, and another part varies through all possibilities. For example, an attack might use 256 chosen plaintexts that have all but 8 of their bits the same, but all differ in those 8 bits. Such a set necessarily has an XOR sum of 0, and the XOR sums of the corresponding sets of ciphertexts provide information about the cipher's operation. The usage of the sums of larger sets of texts contrasts the usage of the differences of pairs of texts in differential cryptanalysis.

        // Source: Wikipedia
        component Boomerang Attack
          A method for the cryptanalysis of block ciphers based on a chosen plaintext attack using differential cryptanalysis. The attack attempts to generate a so-called "quartet" structure at a point halfway through the cipher. The attack algorithm creates chosen plaintext pairs with known differentials that cover only part of the cipher and through the decryption oracle is capable of propagating the differential through the entire cipher. The attack is applicable to hash functions built using block ciphers such as those using the Merkle-Damgård construction.

        // Source: Wikipedia
        component Slide Attack
          A form of cryptanalysis analyzing a cipher's key schedule making the number of rounds irrelevant. The attack works by breaking the cipher up into identical permutation functions, F. Function F may consist of more than one round of the cipher; it is defined by the key schedule. Many plaintext/ciphertext pairs are collected denoted as (P,C) are then used to find a slid pair which is denoted (P0,C0)(P1,C1). A slid pair has the property that P0 = F(P1) and C0 = F(C1). P1/P0 and C1/C0 are then known plaintext/ciphertext pairs for F and can be combined with a known-plaintext attack on F to extract the key used by F.

        // Source: Wikipedia
        component Rotational Cryptanalysis
          A generic cryptanalytic attack against algorithms that rely on the modular addition, bit rotation, and XOR operations (ARX for short). The basic idea of rotational cryptanalysis is that both the bit rotation and XOR operations preserve correlations between bit-rotated pairs of inputs, and that addition of bit-rotated inputs also partially preserves bit rotation correlations. Rotational pairs of inputs can thus be used to break the cipher in a way that is similar to differential cryptanalysis.

        // Source: Wikipedia
        component Timing Attack
          A side-channel attack where the attacker attempts to compromise a cryptosystem by analyzing the time taken to execute cryptographic algorithms. Every logical operation in a computer takes time to execute, and the time can differ based on the input; with precise measurements of the time for each operation, an attacker can work backwards to the input. Finding secrets through timing information may be significantly easier than using cryptanalysis of known plaintext/ciphertext pairs. Sometimes timing information is combined with cryptanalysis to increase the rate of information leakage.

        // Source: Wikipedia
        component Extended Sparse Linearization Attack (XSL)
          A method of cryptanalysis for block ciphers. The attack involves expressing the cipher's operations as a system of overdefined quadratic equations. By applying the XSL algorithm, which leverages the sparsity and specific structure of these equations, an attacker attempts to solve for the secret key. Notably, the XSL attack requires only a limited number of known plaintexts, distinguishing it from cryptanalytic techniques that necessitate large datasets.

        // Source: Wikipedia
        component Interpolation Attack
          A type of cryptanalytic attack against block ciphers. The attack expresses the ciphertext as a polynomial of the plaintext. If the polynomial has a relatively low number of unknown coefficients, then with a collection of plaintext/ciphertext pairs, the polynomial can be reconstructed. With the polynomial reconstructed the attacker then has a representation of the encryption, without exact knowledge of the secret key. The polynomial can also be used to recover the secret key.

        // Source: Wikipedia
        component Partitioning Cryptanalysis
          A form of cryptanalysis for block ciphers that is a generalization of linear cryptanalysis. The bit sums (affine transformations) of linear cryptanalysis are replaced with more general balanced Boolean functions. Partitioning cryptanalysis works by dividing the sets of possible plaintexts and ciphertexts into efficiently computable partitions such that the distribution of ciphertexts is significantly non-uniform when the plaintexts are chosen uniformly from a given block of the partition. By analyzing how different inputs map to these partitions, an attacker can identify patterns or weaknesses that facilitate key recovery.

        // Source: Wikipedia
        component Davies Attack
          A dedicated statistical cryptanalysis method for attacking the Data Encryption Standard (DES). Davies is a known-plaintext attack based on the non-uniform distribution of the outputs of pairs of adjacent S-boxes. The attack works by collecting many known plaintext/ciphertext pairs and calculating the empirical distribution of certain characteristics. Bits of the key can be deduced given sufficiently many known plaintexts, leaving the remaining bits to be found through brute force.

        // Source: Wikipedia
        component Rebound Attack
          A type of statistical attack on hash functions, using techniques such as rotational and differential cryptanalysis to find collisions and other interesting properties. The attack occurs in two phases: the inbound phase and the outbound phase. The inbound phase employs a meet-in-the-middle strategy to efficiently navigate through the most complex parts of a differential path. By leveraging available degrees of freedom, the attacker can deterministically satisfy certain conditions within the cipher's internal state. The outbound phase  probabilistically extends the differential path to the cipher's input and output, aiming to link the internal state conditions to actual plaintext and ciphertext pairs.

        // Source: Wikipedia
        component Weak Key Attack
          A cryptanalysis method exploiting specific keys that cause a cipher to exhibit predictable or undesirable behavior, compromising its security. These weak keys often constitute a small fraction of the total key space, but their use can lead to vulnerabilities. To mitigate the risks associated with weak keys, cryptographic systems often include mechanisms to detect and avoid them during key generation.

        // Source: Wikipedia
        component Distinguishing Attack
          Any form of cryptanalysis on data encrypted by a cipher that allows an attacker to distinguish the encrypted data from random data. To prove that a cryptographic function is safe, it is often compared to a random oracle. If a function is a random oracle, then an attacker is unable to predict any of the output of the function. If a function is distinguishable from a random oracle, it has non-random properties. That is, there exists a relation between different outputs, or between input and output, which can be used by an attacker for example to find (a part of) the input.

      end

    subsystem Cryptographic Key Concepts
      Concepts related to the creation and usage of cryptographic keys.

      contains

      // Source: Wikipedia
      component Key
        A string of data used with cryptographic algorithms to encrypt or decrypt data, authenticate messages, or verify digital signatures. Keys are categorized into symmetric keys, where the same key is used for both encryption and decryption, and asymmetric keys, which come in pairs (public and private) for digital signatures and secure key exchanges. Key security depends on effective management practices, including secure generation, storage, and distribution.

      // Source: Wikipedia
      component Key Stretching
        A technique used to strengthen weak passwords or keys, making them more resistant to brute force attacks. It involves using a key derivation function (KDF) that repeatedly applies a cryptographic hash or encryption function to the original password or key, increasing the computational cost required for each attempt to guess it.

      // Source: Wikipedia
      component Key Derivation
        The process of applying mathematical operations to produce one or more secure keys, ensuring that even if the original input is predictable, the derived keys are strong and unique. Key derivation ensures that derived keys are not only more secure but also suitable for different cryptographic uses, enabling the creation of keys with specific lengths or structural requirements for different protocols and systems​.

      // Source: Wikipedia
      subsystem Key Derivation Function (KDF)
        A cryptographic algorithm that derives secure keys from an initial secret value (such as a password or master key) and a salt by repeatedly performing operations that strengthen security. The KDF iteration parameter determines the increase in computational difficulty. The main purpose of KDFs is to prevent brute force attacks by making each attempt more resource-intensive.

        // Source: Wikipedia
        component Password-Based Key Derivation Function 2 (PBKDF2)
          An algorithm that applies a pseudorandom function, such as hash-based message authentication code (HMAC), to the input password or passphrase along with a salt value and repeats the process many times to produce a derived key that can be used as a cryptographic key in subsequent operations. When the standard was written in the year 2000 the recommended minimum number of iterations was 1,000, but the parameter is intended to be increased over time as CPU speeds increase.

        // Source: Wikipedia
        component bcrypt
          An algorithm that applies the Blowfish cipher to the input password or passphrase along with a salt value and repeats the process a variable number of times, depending on the desired computational cost, to produce a derived key that can then be used as a cryptographic key in subsequent operations.

        // Source: Wikipedia
        component scrypt
          An algorithm that applies PBKDF2 to the input password or passphrase along with a salt value. Additionally, there is a mixing step with a large vector of pseudorandom bit strings that are generated as part of the algorithm. Once the vector is generated, the elements of it are accessed in a pseudo-random order and combined to produce the derived key. This mixing step was specifically designed to make it costly to perform large-scale custom hardware attacks by requiring large amounts of memory.

      // Source: Wikipedia
      subsystem Key Management
        The comprehensive process of generating, distributing, storing, using, and eventually destroying cryptographic keys to ensure secure operations within an organization.

        // Source: Wikipedia
        component X.509
          An International Telecommunication Union (ITU) standard defining the format of public key certificates. An X.509 certificate binds an identity to a public key using a digital signature. A certificate contains an identity and a public key, and is either signed by a certificate authority or is self-signed. X.509 also defines certificate revocation lists, which are a means to distribute information about certificates that have been deemed invalid by a signing authority.

        // Source: Wikipedia
        component Public Key Infrastructure (PKI)
          A set of roles, policies, hardware, software and procedures needed to create, manage, distribute, use, store and revoke digital certificates and manage public-key encryption. PKI is an arrangement that binds public keys with respective identities of entities. The binding is established through a process of registration and issuance of certificates at and by a certificate authority.

      // Source: Wikipedia
      subsystem Key Exchange
        A method in cryptography by which cryptographic keys are exchanged between two parties, allowing use of a cryptographic algorithm. Historically, before the invention of public-key cryptography it required a secret key to be communicated through trusted couriers, diplomatic bags, or any other secure communication channel.

        // Source: Wikipedia
        component Needham-Schroeder Protocol
          A key exchange protocol designed to establish secure communication between two parties over an insecure network. There are two variants: the symmetric key protocol and the public key protocol. The symmetric key protocol uses a trusted third party who both parties share a unique symmetric key with to facilitate the exchange of a session key between the parties. The public key protocol uses a pair of public and private keys for each party to establish a shared secret key, but the original version was found to be insecure to man-in-the-middle attacks.

        // Source: RFC 5990
        component RSA Key Encapsulation Mechanism (RSA-KEM)
          A cryptographic method that securely transports keying material using the recipient's RSA public key. Unlike traditional RSA encryption, which directly encrypts the keying data, RSA-KEM encrypts a randomly generated integer and derives the keying material from it. This approach enhances security by ensuring that the input to the RSA operation is a random integer without exploitable structure, and the keying data remains independent of the RSA decryption output.

        // Source: NTT PSEC-KEM Specification
        component Provably Secure Elliptic Curve Key Encapsulation Mechanism (PSEC-KEM)
          A cryptographic protocol designed to securely transmit symmetric keys over insecure channels using elliptic curve cryptography. PSEC-KEM operates by generating a random session key and encapsulating it into a ciphertext using the recipient's public key. The recipient can then decapsulate the ciphertext with their private key to retrieve the session key that is subsequently used for symmetric encryption of the actual message.

      end

    subsystem Ciphers
      Concepts related to encryption, decryption, and ciphers.

      contains

        // Source Wikipedia
        component Block Cipher
          A symmetric key encryption algorithm that processes data in fixed-size blocks with an unvarying transformation of plaintext into ciphertext using a secret key. Even a secure block cipher is suitable for the encryption of only a single block of data at a time, using a fixed key. A multitude of modes of operation have been designed to allow their repeated use in a secure way. Block ciphers also feature as building blocks in other cryptographic protocols, such as universal hash functions and pseudorandom number generators.

        // Source: Wikipedia
        component Stream Cipher
           A symmetric key encryption algorithm that encrypts plaintext data one bit or byte at a time, producing a continuous stream of ciphertext. Stream ciphers generate a pseudorandom keystream that is combined with the plaintext, typically using the XOR operation, to produce the ciphertext. The transformation of the plaintext into ciphertext is dependent on the state of the cipher in particular the keystream.

        // Source: Wikipedia
        subsystem Public Key Cryptography
          The field of cryptographic systems that use pairs of related keys. Each key pair consists of a public key and a corresponding private key. The public key is openly distributed and used for encrypting messages or verifying digital signatures, while the private key is kept confidential and used for decrypting messages or creating digital signatures. This dual-key mechanism enables secure communication over insecure channels without the need to share secret keys beforehand.

          contains

            // Source: Wikipedia
            component Public Key
              A cryptographic key that is generated as part of a public key cryptography key pair. The public key can be used to encrypt messages or verify a digital signature. Importantly, it cannot be used to decrypt messages or create digital signatures. The security of the cryptosystem does not rely on the secrecy of the public key, and it is shared openly.

            // Source: Wikipedia
            component Private Key
              A cryptographic key that is generated as part of a public key cryptography key pair. The private key can be used to decrypt messages or create digital signatures. This security of the cryptosystem relies on the secrecy of the private key, and it is not shared.

            // Source: Wikipedia
            component Fingerprint
              A bit string generated through a cryptographic hash function that is a concise, fixed-size representation of a larger data set. Fingerprints serve as identifiers that are highly likely to uniquely identify the larger data set when the set of possible hash values is significantly greater than the number of items compared. The smaller fixed-size representation facilitates efficient verification and comparison processes.

            // Source: Wikipedia
            subsystem Public Key Algorithms
              A listing of cryptographic algorithms satisfying the properties required for public key cryptography.

              // Source: Wikipedia
              component Digital Signature Standard (DSS)
                 A Federal Information Processing Standard specifying a suite of algorithms that can be used to generate digital signatures established by the U.S. National Institute of Standards and Technology (NIST) in 1994. It defines the Digital Signature Algorithm, contains a definition of RSA signatures, and contains a definition of the Elliptic Curve Digital Signature Algorithm.

              // Source: Wikipedia
              component Digital Signature Algorithm
                A public-key cryptography algorithm based on the intractability of modular exponentiation and the discrete logarithm problem. DSA is a variant of the Schnorr and ElGamal signature schemes. DSA was created by the National Security Agency (NSA) and adopted as part of the DSS.

              // Source: Wikipedia
              component Paillier Cryptosystem
                A probabilistic public-key cryptography algorithm based on the intractability of the decisional composite residuosity assumption. Paillier is additively homomorphic, meaning the multiplication of two ciphertexts will decrypt to the addition of the two plaintexts. Paillier is secure against chosen plaintext attacks but not adaptive chosen plaintext attacks.

              // Source: Wikipedia
              component Rivest–Shamir–Adleman (RSA)
                A public-key cryptography algorithm based on the intractability of efficiently factoring large composite numbers. RSA has a 2048 or 4096 bit key size. RSA requires use of the Optimal Asymmetric Encryption Padding scheme to preserve its security properties. There are several known attacks against RSA when not implemented and operated optimally. RSA was adopted as part of the DSS.

              // Source: Wikipedia
              component Cramer-Shoup
                A public-key cryptography algorithm based on the intractability of the Decisional Diffie–Hellman assumption. Cramer-Shoup extends the ElGamal algorithm with a universal one-way function to achieve non-malleability. It was the first practical public-key cryptosystem proven to be secure against adaptive chosen ciphertext attacks without relying on the random oracle model.

              // Source: Wikipedia
              component Diffie–Hellman Key Exchange
                A mathematical method of securely generating a symmetric cryptographic key over a public channel that was one of the first public-key protocols. Diffie–Hellman is based on the intractability of the Decisional Diffie–Hellman assumption. However, Diffie–Hellman key exchange itself is a non-authenticated protocol susceptible to man-in-the-middle attacks.

              // Source: Wikipedia
              component ElGamal
                A probabilistic public-key cryptography algorithm based on the intractability of the Decisional Diffie–Hellman assumption. ElGamal is an extension of the Diffie–Hellman Key Exchange. The algorithm can be described as performing a Diffie–Hellman key exchange to establish a shared secret then using the secret as a one-time pad for encrypting a message. ElGamal encryption is malleable, and is therefore not secure against chosen ciphertext attacks.

            // Source: Wikipedia
            subsystem Public Key Implementations
              A listing of software implementing public key cryptography using public key algorithms.

              // Source: Wikipedia
              component Mix Network (mixnet)
                Routing protocol that creates hard-to-trace communications by using a chain of mix node servers. Each message is encrypted by the sender first with the public key of the final mix node then with the public key of the next to last mix node and so on until the message is encrypted with the public key of the first mix node. Mix nodes take in messages from multiple senders, shuffle them, decrypt the outermost layer of encryption, and send them back out in random order to the next destination (possibly another mix node). This breaks the link between the source of the message and the destination. Each mix node only knows the node that it immediately received the message from, and the immediate destination to send the shuffled messages to, making the network resistant to malicious mix nodes.

              // Source: Wikipedia
              component Pretty Good Privacy (PGP)
                An encryption program that provides cryptographic privacy and authentication for data communication. PGP uses a combination of symmetric-key and public-key cryptography to secure emails, files, and other forms of data. PGP also supports digital signatures, allowing users to verify the authenticity and integrity of messages and files.

              // Source: Wikipedia
              component GNU Privacy Guard (GPG)
                A free-software replacement for Symantec's cryptographic software suite PGP. GPG is interoperable with modern versions of PGP and other OpenPGP v4-compliant systems. GPG is part of the GNU Project.

              // Source: Wikipedia
              component Off-the-Record Messaging
                A cryptographic protocol that provides secure, private, and authenticated communication for instant messaging. OTR ensures that conversations are confidential and offer deniable authentication. The protocol employs a combination of AES for encryption, the Diffie–Hellman key exchange for secure key negotiation, and SHA-1 for hashing. OTR also provides forward secrecy, ensuring that if long-term keys are compromised, past conversations remain secure.

          end

        // Source: Wikipedia
        subsystem Symmetric Key Algorithms
           Cryptographic algorithms that use the same cryptographic keys for both the encryption of plaintext and the decryption of ciphertext. The keys may be identical, or there may be a simple transformation to go between the two keys. The keys, in practice, represent a shared secret between two or more parties that can be used to maintain a private information link. The requirement that both parties have access to the secret key is one of the main drawbacks of symmetric-key encryption.

          // Source: Wikipedia
          component Advanced Encryption Standard (AES)
            A specification for the encryption of electronic data established by the U.S. National Institute of Standards and Technology (NIST) in 2001. AES is a variant of the Rijndael block cipher with a 128 bit block size, and a 128, 192, or 256 bit key size. AES employs a series of transformations, including substitution, permutation, and mixing, across multiple rounds to encrypt data.

          // Source: Wikipedia
          component Blowfish
            A symmetric-key block cipher designed as an unpatented and royalty-free public domain alternative to existing encryption algorithms. Blowfish employs a 16-round Feistel network structure, utilizing key-dependent S-boxes and a complex key schedule to enhance security.

          // Source: Wikipedia
          component Camellia
            A symmetric key block cipher with a 128 bit block size and 128, 192 and 256 bit key sizes. Camellia employs a Feistel network structure with either 18 or 24 rounds, depending on the key length, and incorporates key-dependent transformations to enhance security. The cipher has been approved for use by the ISO/IEC, the European Union's NESSIE project and the Japanese CRYPTREC project.

          // Source: Wikipedia
          component CAST-128
            A symmetric-key block cipher with a 64 bit block size and a variable 40 to 128 bit key size. CAST-128 is a 12- or 16-round Feistel network with large 8×32 bit S-boxes based on bent functions, key-dependent rotations, modular addition and subtraction, and XOR operations. The Cipher has also been approved for Government of Canada use by the Communications Security Establishment.

          // Source: Wikipedia
          component Data Encryption Standard (DES)
            A symmetric-key block cipher that was established as a federal standard for encrypting sensitive information in 1977. DES has a balanced Feistel network structure and operates on 64 bit blocks of data utilizing a 56 bit key to perform 16 rounds of permutations and substitutions. DES is insecure due to the relatively short 56 bit key size.

          // Source: Wikipedia
          component International Data Encryption Algorithm (IDEA)
            A symmetric-key block cipher with a 64 bit block size and a 128 bit key size. IDEA has a Lai-Massey scheme structure and performs 8.5 rounds of transformations. The algorithm has two parallel Lai-Massey schemes that are interwoven followed by a key dependent final half round.

          // Source: Wikipedia
          component Rivest Cipher 2 (RC2)
            A symmetric-key block cipher with a 64 bit block size and a variable key size. The cipher consists of 18 rounds arranged as a source-heavy unbalanced Feistel network, with 16 rounds of one type (MIXING) punctuated by two rounds of another type (MASHING). A version of the cipher with a 40 bit key size was approved for export in 1989, by US regulators. RC2 is vulnerable to a related-key attack using 234 chosen plaintexts.

          // Source: Wikipedia
          component Rivest Cipher 5 (RC5)
            A symmetric-key block cipher with a 32, 64 or 128 bit block size and 0 to 2040 bit key size which performs 0 to 255 rounds of operations. The cipher has a simple Feistel-like-network structure with modular additions, XORs, and data-dependent rotations. The key schedule expands the key using binary expansions of both e and the golden ratio. The original suggested parameters were a 64 bit block size, a 128 bit key size, and 12 rounds.

          // Source: Wikipedia
          component Rivest Cipher 6 (RC6)
            A symmetric key block cipher derived from RC5 with a 128 bit block size, 128, 192, 256, or up to 2040 bit key size with 20 rounds of transformations. The cipher has a Feistel structure with an interweaving of two parallel RC5 encryption processes with an extra multiplication operation to make the rotation dependent on every bit in a word, and not just the least significant few bits. RC6 was a finalist in the AES competition and was submitted to the NESSIE and CRYPTREC projects.

          // Source: Wikipedia
          component SEED
             A symmetric key block cipher with a 128 bit block size and a 128 bit key size. SEED employs a 16 round Feistel structure with two 8 × 8 S-boxes that are combined in a moderately complex set of boolean functions such that each output bit depends on 3 of the 4 input bytes. SEED has a fairly complex key schedule with 32 bit subkeys. SEED was developed by the Korea Information Security Agency (KISA) because 40 bit encryption imported from the U.S. was not considered strong enough.

          // Source: Wikipedia
          component Serpent
            A symmetric key block cipher with a 128 bit block size and 128, 192, or 256 bit key size. The cipher is a 32-round substitution–permutation network. Each round applies one of eight 4 bit to 4 bit S-boxes 32 times in parallel. Serpent was designed so that all operations can be executed in parallel, using 32 bit slices. Serpent was a finalist in the AES competition.

          // Source: Wikipedia
          component Skipjack
            A symmetric-key block cipher with a 64 bit block size of and an 80 bit key size. Skipjack is structured as an unbalanced Feistel network with 32 rounds. Skipjack was developed by the U.S. National Security Agency (NSA) and intended for use in the Clipper chip, a device proposed to secure voice communications while allowing government access under certain conditions.

          // Source: Wikipedia
          component Tiny Encryption Algorithm (TEA)
            A symmetric-key block cipher known for its simplicity and efficiency. TEA operates on 64 bit data blocks and utilizes a 128 bit key. It employs a Feistel network structure with a recommended 64 rounds. TEA has an extremely simple key schedule, mixing all of the key material in exactly the same way for each cycle. TEA is also susceptible to a related-key attack that requires 2^23 chosen plaintexts under a related-key pair, with 2^32 time complexity.

          // Source: Wikipedia
          component Triple Data Encryption Algorithm (3DES)
            A symmetric-key block cipher that applies the DES cipher algorithm three times to each data block. 3DES operates on 64 bit blocks with a 168 bit equivalent key (three separate 56 bit DES keys). 3DES is a Feistel network with 48 DES-equivalent rounds. A CVE released in 2016 combined with the inadequate key size of 3DES, led to NIST deprecating 3DES in 2019 and disallowing all uses by 2023.

          // Source: Wikipedia
          component Twofish
            A symmetric key block cipher with a 128 bit block size and 128, 192, or 256 bit key size. Twofish is related to the earlier block cipher Blowfish. Twofish uses pre-computed key-dependent S-boxes, and a relatively complex key schedule. The cipher has a Feistel network structure with 16 rounds of transformations. Twofish was one of the five finalists in the AES competition. Twofish remains unpatented and is available for public use without restrictions.

          // Source: Wikipedia
          component Extended Tiny Encryption Algorithm (XTEA)
            A symmetric-key block cipher designed to address vulnerabilities in its predecessor, TEA. XTEA operates on 64 bit data blocks and utilizes a 128 bit key. It employs a Feistel network structure with a recommended 64 rounds (32 cycles) of encryption, incorporating operations such as addition, XOR, and bitwise shifts. The key schedule complexity was increased to address weaknesses in TEA.

          // Source: Wikipedia
          component ZUC
            A stream cipher with a 128 bit secret key and a 128 bit initialization vector (IV), producing a keystream of 32 bit words for encryption and decryption processes. ZUC uses a 16-stage linear feedback shift register over the field GF(2^31−1), a bit reorganization layer, and a nonlinear function for keystream generation. ZUC serves as the core component of the 3GPP confidentiality and integrity algorithms, which are widely utilized in Long Term Evolution (LTE) networks.

        // Source: Wikipedia
        subsystem Block Cipher Modes
          A listing of block cipher modes of operation.

          // Source: HA Crypto
          component Electronic Codebook (ECB)
            An encryption mode where a plaintext is divided into blocks and each block is encrypted separately.

          // Source: HA Crypto
          component Cipher Block Chaining (CBC)
            An encryption mode where each block of plaintext is XORed with the previous ciphertext block before being encrypted.

          // Source: HA Crypto
          component Propagating Cipher Block Chaining (PCBC)
            A mode that is designed to cause small changes in the ciphertext to propagate indefinitely when decrypting, as well as when encrypting.

          // Source: HA Crypto
          component Cipher Feedback (CFB)
            A mode that makes a block cipher into a self-synchronizing stream cipher.

          // Source: HA Crypto
          component Output Feedback (OFB)
            A mode that makes a block cipher into a stream cipher by generating keystream blocks that are XORed with the plaintext blocks to get the ciphertext.

          // Source: HA Crypto
          component Counter (CTR)
            A mode that makes a block cipher into a stream cipher by generating the next keystream block by encrypting successive values of a counter.

        // Source: Wikipedia
        subsystem Homomorphic Encryption
          A form of encryption that enables computation on ciphertext where the data, intermediate values, and result of the computation remain encrypted. The decryption of the ciphertext result is identical to the result of an analogous computation on the original plaintext. Homomorphic encryption systems differ with respect to the number and type of computational operations supported.

          contains

          // Source: Wikipedia
          component Partially Homomorphic Encryption (PHE)
            A class of homomorphic encryption schemes supporting only a single type of computational operation such as either multiplication or addition that is fixed by the design of the scheme. PHE schemes support an unbounded number of computational operations on arbitrary circuits.

          // Source: Wikipedia
          component Somewhat Homomorphic Encryption (SHE)
            A class of homomorphic encryption schemes supporting only two types of computational operations such as multiplication and addition that are fixed by the design of the scheme. SHE schemes support an unbounded number of computational operations, but only for a subset of circuits.

          // Source: Wikipedia
          component Leveled Fully Homomorphic Encryption (Leveled-FHE)
            A class of homomorphic encryption schemes supporting multiple types of computational operations. Leveled FHE schemes support only a bounded number of computational operations, but do support computation on arbitrary circuits.

          // Source: Wikipedia
          component Fully Homomorphic Encryption (FHE)
            A class of homomorphic encryption schemes supporting multiple types of computational operations. FHE schemes support an unbounded number of computational operations on arbitrary circuits. A FHE scheme is the strongest notion of homomorphic encryption.

          end

      end

    subsystem Text
      Concepts related to different types of sequences of characters and their usage in cryptography.

      contains

      // Source: Wikipedia
      component Plaintext
        Data in its original, unencrypted form that is readable and understandable without any decryption.

      // Source: Wikipedia
      component Ciphertext
        The result of encryption performed on plaintext using an algorithm, called a cipher. Ciphertext is also known as encrypted or encoded information because it contains a form of the original plaintext that is unreadable by a human or computer without the proper cipher and the appropriate decryption key.

      // Source: HA Crypto
      component Stream
        An unbounded length sequence of bits.

      // Source: Wikipedia
      component Keystream
        A stream of key material generated by a stream cipher's algorithm that is combined with plaintext to produce ciphertext. The keystream is typically generated from a cryptographic key and an initialization vector (IV), ensuring that the same plaintext encrypted with different keys or IVs results in different ciphertexts.

      // Source: HA Crypto
      component Block
        A fixed length sequence of bits.

      // Source: Wikipedia
      subsystem Padding
        Any of a number of distinct practices that all include adding data to the beginning, middle, or end of a message prior to encryption. In classical cryptography, padding may include adding nonsense phrases to a message to obscure the fact that many messages end in predictable ways.

        // Source: Wikipedia
        component Optimal Asymmetric Encryption Padding (OAEP)
          A padding scheme used in conjunction with asymmetric encryption algorithms. OAEP addresses vulnerabilities associated with deterministic encryption by incorporating randomness into the encryption process. This is achieved by embedding the plaintext message into a larger, padded message before encryption, using hash functions and a mask generation function to ensure that identical plaintexts encrypt to different ciphertexts each time.

        // Source: Wikipedia
        component Rivest–Shamir–Adleman Optimal Asymmetric Encryption Padding (RSA-OAEP)
          A specific instance of OAEP using the RSA asymmetric encryption algorithm. RSA-OAEP provides stronger security guarantees against chosen ciphertext attacks than OAEP in general provides.

      end

    subsystem Signatures
      Concepts related to signing and signatures in cryptography.

      // Source: Wikipedia
      component Digital Signature
        A mathematical scheme that verifies the authenticity and integrity of a digital message or document. Digital signatures utilize asymmetric cryptography, involving a pair of keys: a private key for signing and a public key for verification. The sender uses their private key to generate a unique signature for the message that the recipient can verify using the sender's public key. This process provides non-repudiation, meaning the sender cannot deny having sent the message, and ensures that any tampering with the message after signing will invalidate the signature.

      // Source: Wikipedia
      component Signature
         A depiction of someone's name, nickname, or even a simple "X" or other mark that a person writes on documents as a proof of identity and intent. The traditional function of a signature is to permanently affix to a document a person's uniquely personal, undeniable self-identification as physical evidence of that person's personal witness and certification of the content of all, or a specified part, of the document.

      // Source: Wikipedia
      component Schnorr Signature
         A digital signature scheme that operates over groups where the discrete logarithm problem is hard. The scheme involves generating a random value, computing a commitment, deriving a challenge by hashing the message and commitment, and producing a response that combines the random value and the signer's private key. Verification is performed by reconstructing the commitment from the response and challenge, ensuring the signature's validity.

    subsystem Hashes
      Concepts related to hashes and cryptographic hash functions.

      contains

        // Source: Wikipedia
        component Cryptographic Hash Function
          A map from arbitrary binary strings to binary strings with a fixed bit length, with special properties desirable for cryptographic applications. These properties are: (1) the probability of a particular output hash value is uniform; (2) finding an input string that matches a given hash value is infeasible; (3) given an input and a hash value, finding a second input that results in the same hash value is infeasible; and (4) finding any pair of inputs that result in the same hash value is infeasible.

        // Source: Wikipedia
        component Hash Value
          The fixed size bit string output of a cryptographic hash function.

        // Source: Wikipedia, http://www.larc.usp.br/~pbarreto/WhirlpoolPage.html
        component Whirlpool
          A cryptographic hash function with a 512 bit output size. Whirlpool uses Merkle-Damgård strengthening and the Miyaguchi-Preneel hashing scheme with a dedicated 512 bit block cipher based on the AES block cipher. Whirlpool has been recommended by the NESSIE project and jointly adopted by the International Organization for Standardization (ISO) and the International Electrotechnical Commission (IEC).

        // Source: Wikipedia
        component RIPE Message Digest 160 (RIPEMD-160)
          A cryptographic hash function with a 512 bit output size. RIPEMD-160 uses the Merkle-Damgård construction and extends MD4 by running two MD4 instances in parallel.

        // Source: Wikipedia
        component crypt
          A POSIX C library function. crypt provides cryptographic key derivation functions for password validation and storage on Unix systems. crypt supports many different underlying hash functions, depending on the operating system it is running on.

        subsystem Hash Designs
          Concepts related to the algorithms and constructions used in cryptographic hash functions.

          // Source: Wikipedia
          component Avalanche Effect
            The desirable property of cryptographic algorithms, typically block ciphers and cryptographic hash functions, wherein if an input is changed slightly, the output changes significantly. The strict avalanche criterion (SAC) is a formalization of the avalanche effect. It is satisfied if, whenever a single input bit is complemented, each of the output bits changes with a 50% probability.

          // Source: Wikipedia
          component Hash Collision
            When two different inputs to a hash function produce the same output.

          // Source: Wikipedia
          component Merkle-Damgård Construction
            A method for building cryptographic hash functions that process messages of arbitrary length into fixed-size outputs. The construction divides the message into fixed size blocks and iteratively feeds each message block into a compression function along with the output of the compression function run on the previous message block, except for the initial message block that is combined with a fixed initialization vector. A padding scheme is used that both extends the message to be a multiple of the block size and encodes the length of the original message. The construction provably creates a collision-resistant cryptographic hash function if the one-way compression function is collision-resistant.

          // Source: Wikipedia
          component Hash Chain
             The successive application of a cryptographic hash function to a piece of data.

        subsystem Hash Standardization
          Concepts related to the standardization of hash functions by government entities.

          // Source: Wikipedia
          component Cryptography Research and Evaluation Committees (CRYPTREC)
            A Japanese government initiative established to evaluate and recommend cryptographic techniques for government and industrial use. CRYPTREC includes members from Japanese academia, industry, and government. It was started in May 2000 by combining efforts from several agencies that were investigating methods and techniques for implementing 'e-Government' in Japan.

          // Source: Wikipedia, NESSIE Project
          component New European Schemes for Signatures Integrity and Encryption (NESSIE)
             A European research project funded from 2000 to 2003 to identify secure cryptographic primitives. The goal of the NESSIE project was to put forward a portfolio of strong cryptographic algorithms that had been obtained after an open call and had been evaluated using a transparent and open evaluation process.

          // Source: Wikipedia
          component NIST Hash Function Competition
            An open competition held by the US National Institute of Standards and Technology (NIST) to develop a new hash function called SHA-3 to complement the older SHA-1 and SHA-2. The competition was formally announced in the Federal Register on November 2, 2007. The competition ended on October 2, 2012, when NIST announced that Keccak would be the new SHA-3 hash algorithm.

        subsystem MD Family
          Concepts related to the collection of message digest algorithms designed by Ronald Rivest.

          // Source: Wikipedia, RSA Laboratories, RFC 1319
          component MD2 Message-Digest Algorithm (MD2)
            A cryptographic hash function with a 128 bit output size and a 128 bit block size. The message is padded so its length in bytes is divisible by 16. A 16-byte checksum is then appended to the message. The message is then processed in 128 bit blocks through the Merkle-Damgård structure.

          // Source: Wikipedia, RSA Laboratories
          component MD4 Message-Digest Algorithm (MD4)
            A cryptographic hash function with a 128 bit output size and a 512 bit block size. The message is padded to ensure that its length in bits plus 64 is divisible by 512. A 64 bit binary representation of the original length of the message is then concatenated to the message. The message is then processed in 512 bit blocks through the Merkle-Damgård structure. The security of MD4 has been severely compromised, as an attack can generate collisions in less than two MD4 hash operations.

          // Source: Wikipedia, RSA Laboratories
          component MD5 Message-Digest Algorithm (MD5)
            A cryptographic hash function with a 128 bit output size and a 512 bit block size. The message padding scheme is identical to MD4. The message is then processed in 512 bit blocks through the Merkle-Damgård structure, but with a different compression function than the one used in MD4. A collision attack exists that can find collisions within seconds on a modern computer. Additionally, there is also a chosen-prefix collision attack that can produce a collision for two inputs with specified prefixes within seconds.

          // Source: Wikipedia, The MD6 hash function: A proposal to NIST for SHA-3
          component MD6 Message-Digest Algorithm (MD6)
            A cryptographic hash function with a variable 1 to 512 bit output size. MD6 uses a Merkle tree construction with a 4096 bit compression function input block size and a 1024 bit intermediate value size. The algorithm then truncates the natively 1024 bit output size to the desired output size for the final output.

        // Source: Wikipedia
        subsystem SHA Family
          A family of cryptographic hash functions published by the National Institute of Standards and Technology (NIST) as a U.S. Federal Information Processing Standard (FIPS).

          contains

            // Source: Wikipedia
            // fips: FIPS PUB 180
            // certifications: FIPS, CRYPTREC
            component Secure Hash Algorithm 1 (SHA-1)
              A cryptographic hash function designed by the NSA with a 160 bit output size and a 512 bit block size. The message is padded to a multiple of 512 bit blocks with the message length appended. SHA-1 utilizes a Merkle-Damgård structure where the compression function has a fixed 80 rounds per block. Successful collision and chosen prefix attacks have been performed leading to SHA-1 widely being considered insecure.

              What is the SHA-1 digest of this message?

              The digest is guaranteed to be 160 bits long.
              The maximum message size is 2e64-1.
              The algorithm runs 80 rounds.
              The algorithm provides less than 80 bits of security.

            // Source: Wikipedia
            subsystem Secure Hash Algorithm 2 (SHA-2)
              A family of cryptographic hash function designed by the NSA with several output sizes and varying block sizes. The SHA-2 functions share a nearly identical structure, differing with respect to bit sizes and number of rounds. In each case, the message is padded to a multiple of the block size with the message length appended. The blocks are then processed through a Merkle–Damgård construction using a Davies–Meyer one-way compression function. The SHA-2 family of functions are prone to length extension attacks.

              contains

              // Source: Wikipedia
              component SHA-224
                An instance of a SHA-2  cryptographic hash function with a 224 bit output size and 512 bit block size. The compression function performs 64 rounds of computation.

                What is the SHA-224 digest of this message?

                The digest is guaranteed to be 224 bits long.
                The maximum message size is 2e64-1.
                The algorithm runs 64 rounds.
                The algorithm provides 112 bits of security.

              // Source: Wikipedia
              component SHA-256
                An instance of a SHA-2 cryptographic hash function with a 256 bit output size and 512 bit block size. The compression function performs 64 rounds of computation.

                What is the SHA-256 digest of this message?

                The digest is guaranteed to be 256 bits long.
                The maximum message size is 2e64-1.
                The algorithm runs 64 rounds.
                The algorithm provides 128 bits of security.

              // Source: Wikipedia
              component SHA-384
                An instance of a SHA-2 cryptographic hash function with a 384 bit output size and 1024 bit block size. The compression function performs 80 rounds of computation.

                What is the SHA-384 digest of this message?

                The digest is guaranteed to be 384 bits long.
                The maximum message size is 2e128-1.
                The algorithm runs 80 rounds.
                The algorithm provides 192 bits of security.

              // Source: Wikipedia
              component SHA-512
                An instance of a SHA-2 cryptographic hash function with a 512 bit output size and 1024 bit block size. The compression function performs 80 rounds of computation.

                What is the SHA-512 digest of this message?

                The digest is guaranteed to be 512 bits long.
                The maximum message size is 2e128-1.
                The algorithm runs 80 rounds.
                The algorithm provides 256 bits of security.

                end

            // Source: Wikipedia
            component SHACAL-2
               A 256 bit block cipher based upon the SHA-256 hash function. SHACAL-2 turns the SHA-2 compression function into a block cipher by using the state input as the data block and using the data input as the key input. The compression function can then be viewed as a 80 round block cipher. This compression function is easily invertible if the data block (which is the key) is known, allowing for a decryption operation. SHACAL-2 was selected as one of the 17 NESSIE finalists.

            // Source: Wikipedia
            subsystem Secure Hash Algorithm 3 (SHA-3)
              A family of cryptographic hash functions based on the Keccak algorithm. The SHA-3 functions share an identical structure, differing with respect to the parameters of output size, block size, and the unique to sponge construction parameter of capacity. In each case, the message is padded to a multiple of the block size. SHA-3 functions use a sponge construction where data blocks are absorbed into the state and the output is created by squeezing data out of the state. The permutation function used in absorption and squeezing performs 24 rounds of computation. The amount of internal state unchanged by input/output is the capacity. This structure, unlike Merkle-Damgård, has strong security against length extension attacks. Keccak was chosen as the algorithm for SHA-3 in the NIST Hash Function Competition.

              // Source: Wikipedia
              component SHA3-224
                An instance of a SHA-3 cryptographic hash function with a 224 bit output size, a 1152 bit block size, and a 448 bit capacity.

                What is the SHA3-224 digest of this message?

                The digest is guaranteed to be 224 bits long.
                The rate is 1152 bits.
                The capacity is 448 bits.
                The algorithm runs 24 rounds.

              // Source: Wikipedia
              component SHA3-256
                An instance of a SHA-3 cryptographic hash function with a 224 bit output size, a 1088 bit block size, and a 512 bit capacity.

                What is the SHA3-256 digest of this message?

                The digest is guaranteed to be 256 bits long.
                The rate is 1088 bits.
                The capacity is 512 bits.
                The algorithm runs 24 rounds.

              // Source: Wikipedia
              component SHA3-384
                An instance of a SHA-3 cryptographic hash function with a 384 bit output size, a 832 bit block size, and a 768 bit capacity.

                What is the SHA3-384 digest of this message?

                The digest is guaranteed to be 384 bits long.
                The rate is 832 bits.
                The capacity is 768 bits.
                The algorithm runs 24 rounds.

              // Source: Wikipedia
              component SHA3-512
                An instance of a SHA-3 cryptographic hash function with a 512 bit output size, a 576 bit block size, and a 1024 bit capacity.

                What is the SHA3-512 digest of this message?

                The digest is guaranteed to be 512 bits long.
                The rate is 576 bits.
                The capacity is 1024 bits.
                The algorithm runs 24 rounds.

            subsystem SHA-3 Finalists
              Cryptographic hash function algorithms that were selected as finalists for designation as SHA-3 in the NIST Hash Function Competition.

              // Source: Wikipedia, A Framework for Iterative Hash Functions — HAIFA
              component Blake
                A family of cryptographic hash functions with a 224, 256, 384 or 512 bit output size and a 512 or 1024 bit block size. Blake uses the Hash Iterative Framework construction with a modified version of a ChaCha20 stream cipher round as the compression function with 14 rounds of processing. The hash function operates by compressing a block of input data, the previous compression function output, and a salt value. This process is iterated until the entire input has been processed. Blake uses a wide pipe construction with at least twice the number of internal state bits as output bits to prevent length extension attacks.

              // Source: Wikipedia, Grøstl – a SHA-3 candidate
              component Grøstl
                A family of cryptographic hash functions with an up to 512 bit variable output size and a 512 or 1024 bit block size. Grøstl uses a wide pipe construction with at least twice the number of internal state bits as output bits to prevent length extension attacks. The compression function is constructed as an SP-network with two permutations, one similar to the S-box from AES and another that draws inspiration from AES diffusion.

              // Source: Wikipedia, The Hash Function JH
              component JH
                A cryptographic hash function with a 24, 256, 384 or 512 bit output size, a 512 bit block size, and a 1024 bit internal state. JH uses a structure with similarities to both the sponge and Merkle–Damgård constructions. The compression function operates by XORing a message block with one half of the state, the state is permuted by an inner function, and the message is XORd to the other half of this new state. The inner function is a variation of the AES block cipher design. The iterative processing of previous state with new message blocks by the compression function continues until all message blocks are processed. As only a portion of the state is used as output, the hash function is resistant to length extension attacks.

              // Source: Wikipedia
              component Keccak
                A cryptographic hash function with a sponge construction with a variable output size and variable block size. The algorithm is structured with a 1600 bit internal state initialized to 0 and a permutation function. The internal state is partitioned into a block size called the rate and the remaining portion of the state is called the capacity. As the algorithm processes the input message in a phase called absorption, the input block is XORd into the state, only effecting a block size number of bits, after which the entire state is processed by the permutation function. The output is created in a process called squeezing where a block size number of bits is read out. If this is less than the output size, the permutation function processes the state and another block size number of bits is read out. Having hidden internal state, the capacity, provides protection against length extension attacks. Keccak was chosen to be SHA-3.

              // Source: Wikipedia, The Skein Hash Function Family
              component Skein
                A family of cryptographic hash functions with a 224, 256, 384 or 512 bit output size, a 256, 512, or 1024 bit block size, and an internal state size twice that of the block size. Skein utilizes a wide pipe construction. The compression function is based off of the Threefish block cipher in Unique Block Iteration (UBI) mode. The use of UBI mode allows for the compression function to be given an additional input of which block it is processing tweaking the cipher slightly for that block. This makes traditional attacks more difficult the same message block processed more than once will yield different outputs. The wide pipe construction provides the protection against length extension attacks.

          end


      end

    subsystem Message Authentication
      Concepts related to the cryptographic process that ensures the integrity and authenticity of a message, confirming that it has not been altered and originates from a legitimate source.

      // Source: Wikipedia
      component Deniable Authentication
         Message authentication between a set of participants where the participants themselves can be confident in the authenticity of the messages, but it cannot be proved to a third party after the event. In practice, a message is sent with a message authentication code (MAC) and the next message sent reveals the original message's MAC key. This allows anyone to forge an alternate MAC after the receiving party is certain of the original message's authenticity.

      // Source: Wikipedia
      component Message Authentication Code (MAC)
        A cryptographic construct that verifies the integrity and authenticity of a message. It is generated by applying a secret key to the message data through a MAC algorithm, producing a fixed-size output known as the MAC tag. This tag is transmitted alongside the message. Upon receipt, the recipient, who possesses the same secret key, recalculates the MAC tag from the received message and compares it to the transmitted tag. A match confirms that the message has not been altered and originates from a legitimate source.

      // Source: Wikipedia
      component Hash-based Message Authentication Code (HMAC)
        A specific type of message authentication code involving a cryptographic hash function and a secret cryptographic key. HMAC uses a shared secret instead of digital signatures with asymmetric cryptography. HMAC can use any cryptographic hash function; the size of the output and strength of the security guarantees is that of the underlying hash function.

      // Source: CBC MACs for Arbitrary-Length Messages: The Three-Key Constructions
      component Encrypted Message Authentication Code (EMAC)
        A specific type of message authentication code that enhances the security of the Cipher Block Chaining Message Authentication Code (CBC-MAC) by addressing its limitations with variable-length messages. In EMAC, after computing the CBC-MAC of a message using a block cipher and a secret key, the resulting MAC is further encrypted with a second, independent key. This additional encryption step ensures that the MAC is secure even when messages of different lengths are processed, providing robustness against certain types of cryptographic attacks.

      // Source: NESSIE Submission Two-Track-MAC
      component Two-Track Message Authentication Code (TTMAC)
        A specific type of message authentication code that operates by processing the input message through two parallel tracks of unkeyed hash functions. The two tracks double the size of the internal state of the MAC and the combination of the tracks makes the function uninvertable. A successful attack would have to break both tracks.

      // Source: Wikipedia
      component Universal Hashing Message Authentication Code (UMAC)
        A specific type of message authentication code using universal hashing, that involves choosing a hash function from the class of universal hash functions according to some secret (random) process and applying it to the message. The resulting digest or fingerprint is then encrypted to hide the identity of the hash function that was used.

    subsystem Zero-Knowledge Proofs
      Concepts related to zero-knowledge proofs and proof systems.

      // Source: ElectionGuard
      component Zero-Knowledge Proof
        A method by which one party (the prover) can prove to another party (the verifier) that they know a value x, without conveying any information apart from the fact that they know the value x. The essence of zero-knowledge proofs is that it is trivial to prove that one possesses knowledge of certain information by simply revealing it; the challenge is to prove such possession without revealing the information itself or any additional information.

      // Source: ElectionGuard
      component Non-Interactive Zero-Knowledge Proof
        A zero-knowledge proof that can be performed without interaction or intervention by the prover.

    end

  subsystem Threats
    The concepts related to threats to security and threat modeling.

    // Source: SP800-53
    component Attack Surface
        The set of points on the boundary of a system, a system component, or an environment where an attacker can try to enter, cause an effect on, or extract data from, that system, component, or environment.

    // Source: OMB M-17-12
    component Breach
        The loss of control, compromise, unauthorized disclosure, unauthorized acquisition, or any similar occurrence where: a person other than an authorized user accesses or potentially accesses personally identifiable information; or an authorized user accesses personally identifiable information for an other than authorized purpose.

    // Source: VWYP
    component Denial of Service
        An interruption in an authorized user’s access to a computer network, typically one caused with malicious intent.

    // Source: VWYP
    component Email Breach
        An incident where the security of an email or associated accounts was compromised.

    // Source: NIST
    component Escalation Of Privilege
        An attack on a system where the attacker is using some means to bypass security controls in order to attain a higher privilege level on the target system.

    // Source: CNSSI 4009, Adapted
    component Insider Threat
        The threat that an insider will use her/his authorized access, wittingly or unwittingly, to do harm to the security of organizational operations and assets, individuals, other organizations, and the Nation. This threat can include damage through espionage, terrorism, unauthorized disclosure of national security information, or through the loss or degradation of organizational resources or capabilities.

    // Source: NIST
    component Malware
        Software or firmware intended to perform an unauthorized process that will have adverse impact on the confidentiality, integrity, or availability of a system. For example, a virus, worm, Trojan horse, or other code-based entity that infects a host. Spyware and some forms of adware are also examples of malware.

    // Source: VWYP
    component Multiple Ballot Submission
        Illegally submitting multiple ballots.

    // Source: SP 800-63-3
    component Replay Attack
        An attack where the Attacker is able to replay previously captured messages (between a legitimate Claimant and a Verifier) to masquerade as that Claimant to the Verifier or vice versa.

    // Source: SP800-53
    component Spyware
        Software that is secretly or surreptitiously installed into an information system to gather information on individuals or organizations without their knowledge; a type of malicious code.

    // Source: CNSSI 4009
    component Tampering
        An intentional but unauthorized act resulting in the modification of a system, components of systems, its intended behavior, or data.

    // Source: SP800-30
    component Threat
        Any circumstance or event with the potential to adversely impact organizational operations, organizational assets, individuals, other organizations, or the Nation through a system via unauthorized access, destruction, disclosure, modification of information, and/or denial of service.

    // Source: SP800-154
    component Threat Modeling
        A form of risk assessment that models aspects of the attack and defense sides of a logical entity, such as a piece of data, an application, a host, a system, or an environment.

    // Source: SP800-30
    component Vulnerability
        Weakness in an information system, system security procedures, internal controls, or implementation that could be exploited or triggered by a threat source.

    // Source: CNSSI 4009
    component Vulnerability Assessment
        Systematic examination of an information system or product to determine the adequacy of security measures, identify security deficiencies, provide data from which to predict the effectiveness of proposed security measures, and confirm the adequacy of such measures after implementation.

  subsystem Logging
    Concepts related to the recording of events that occur in a system or network.

    // Source: ElectionGuard
    component Log
      A record of information about a computation. Logs have a notion of legitimate entry, logs only grow monotonically, and logs can be exported to a persistent store. Logs may have any subset of cryptographic integrity, provenance, and confidentiality.

      May I have an empty log?
      How many entries are there in this log?
      Is this log entry in the log?
      What is the external serialized version of this log?

      Add the following entry to this log!

    // Source: NIST
    component Cryptographic Integrity
      A cryptographic means of providing assurance that log entries have not been altered in an unauthorized manner since they were created.

    // Source: NIST
    component Provenance
      The chronology of the origin, development, ownership, location, and changes to a log.

    component Log Confidentiality
      The preservation of the confidentiality of secrets during all logging activity. Information that must remain confidential is only ever written to the log as ciphertext.

    // Source: ElectionGuard
    component Log Entry
      An individual element of a log.

    component Legitimate Entry
      A log entry created by an authorized actor or system.

    // Source: ElectionGuard
    component Election Log
      A record of information about an election. Election logs are associated with a specific election via cryptographic means.

      May I have a new election log for this particular election?
      Does this election log have integrity?
      Does this election log have provenance with regards to that election?
      Does this election log for that election preserve confidentiality?

      Add the following election log entry to this election log!

    // Source: ElectionGuard
    component Election Log Entries inherit Log Entry
      Log entries relevant to E2E-V elections.

    // Source: CNSSI 4009
    component Audit Log
        A chronological record of system activities, including records of system accesses and operations performed in a given period.

    // Source: SP800-53
    component Audit Record
        An individual entry in an audit log related to an audited event.

  // Source: ElectionGuard
  subsystem Assurance Case
    The full assurance case of the protocol family.

    contains

    // Source: ElectionGuard
    component Correctness
      Informal arguments, rigorous testing, and formal proofs about the security assurance case of a system.

    // Source: ElectionGuard
    subsystem Formal
      The mechanized and on-paper formal specifications and proofs of the protocol family.

      // Source: ElectionGuard
      component  Specification
        A precise, mechanized description of a concept.

      // Source: ElectionGuard
      component Lando Specification inherit Specification
        A system specification written in Lando.

      // Source: ElectionGuard
      component Cryptol Specification inherit Specification
        A formal and executable specification written in Cryptol.

    // Source: ElectionGuard
    subsystem Informal
      The natural language specification of the protocol family.

      // Source: ElectionGuard
      component Wikström Book
        Douglas Wikström's book focusing on handwritten formal security proofs related to end-to-end verifiable voting protocols.

      // Source: ElectionGuard
      component Threat Model
        The examination of threat sources against system vulnerabilities to determine the threats for a particular system in a particular operational environment.

    end

  subsystem Others
    Placeholder for concepts waiting to be clustered.

  end



subsystem Legal Standards
  Basic legal standards generic to democratic elections.

  component Legislation
    Legislation is a set of laws. In this context, it is the set of laws dealing with the conduct of elections.


subsystem Personas
  Archetypical personas for actors participating in elections.

