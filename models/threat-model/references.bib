@book{AndersonSecurityEngineeringGuide2020,
  title = {Security {{Engineering}}: {{A Guide}} to {{Building Dependable Distributed Systems}}},
  shorttitle = {Security {{Engineering}}},
  author = {Anderson, Ross},
  year = {2020},
  month = dec,
  edition = {3rd edition},
  publisher = {Wiley},
  address = {Indianapolis},
  abstract = {Now that there's software in everything, how can you make anything secure? Understand how to engineer dependable systems with this newly updated classicIn Security Engineering: A Guide to Building Dependable Distributed Systems, Third Edition Cambridge University professor Ross Anderson updates his classic textbook and teaches readers how to design, implement, and test systems to withstand both error and attack.This book became a best-seller in 2001 and helped establish the discipline of security engineering. By the second edition in 2008, underground dark markets had let the bad guys specialize and scale up; attacks were increasingly on users rather than on technology. The book repeated its success by showing how security engineers can focus on usability.Now the third edition brings it up to date for 2020. As people now go online from phones more than laptops, most servers are in the cloud, online advertising drives the Internet and social networks have taken over much human interaction, many patterns of crime and abuse are the same, but the methods have evolved. Ross Anderson explores what security engineering means in 2020, including:How the basic elements of cryptography, protocols, and access control translate to the new world of phones, cloud services, social media and the Internet of ThingsWho the attackers are -- from nation states and business competitors through criminal gangs to stalkers and playground bulliesWhat they do -- from phishing and carding through SIM swapping and software exploits to DDoS and fake newsSecurity psychology, from privacy through ease-of-use to deceptionThe economics of security and dependability -- why companies build vulnerable systems and governments look the other wayHow dozens of industries went online -- well or badlyHow to manage security and safety engineering in a world of agile development -- from reliability engineering to DevSecOpsThe third edition of Security Engineering ends with a grand challenge: sustainable security. As we build ever more software and connectivity into safety-critical durable goods like cars and medical devices, how do we design systems we can maintain and defend for decades? Or will everything in the world need monthly software upgrades, and become unsafe once they stop?},
  isbn = {978-1-119-64278-7},
  langid = {english}
}

@online{BenalohEtAlEndtoendVerifiability2015,
  title = {End-to-End Verifiability},
  author = {Benaloh, Josh and Rivest, Ronald and Ryan, Peter Y. A. and Stark, Philip and Teague, Vanessa and Vora, Poorvi},
  year = {2015},
  month = apr,
  number = {arXiv:1504.03778},
  eprint = {1504.03778},
  publisher = {arXiv},
  doi = {10.48550/arXiv.1504.03778},
  urldate = {2024-11-19},
  abstract = {This pamphlet describes end-to-end election verifiability (E2E-V) for a nontechnical audience: election officials, public policymakers, and anyone else interested in secure, transparent, evidence-based electronic elections. This work is part of the Overseas Vote Foundation's End-to-End Verifiable Internet Voting: Specification and Feasibility Assessment Study (E2E VIV Project), funded by the Democracy Fund.},
  archiveprefix = {arXiv},
  keywords = {Computer Science - Cryptography and Security}
}

@online{AppelCACVoteAnother2024,
  title = {{{CAC-Vote}}: {{Another Insecure Internet Voting System}}},
  shorttitle = {{{CAC-Vote}}},
  author = {Appel, Andrew},
  date = {2024-11-19T05:46:00+00:00},
  url = {https://blog.citp.princeton.edu/2024/11/19/cac-vote-another-insecure-internet-voting-system/},
  urldate = {2025-03-04},
  abstract = {Philip Stark and I have released this paper with an analysis of a DARPA-sponsored research project to develop an internet voting system. An Internet Voting System Fatally Flawed in Creative New Ways Abstract: The recently published “MERGE” protocol is designed to be used in the prototype CAC-vote system. The voting kiosk and protocol transmit votes […]},
  langid = {american},
  organization = {CITP Blog}
}

@online{AustralianSignalsDirectorateEtAlChoosingSecure,
  title = {Choosing {{Secure}} and {{Verifiable Technologies}}: {{Secure}} by {{Design}}},
  author = {{Australian Signals Directorate} and {Cybersecurity and Infrastructure Security Agency, Department of Homeland Security} and {Canadian Centre for Cyber Security} and {National Cyber Security Centre: GCHQ} and {National Cyber Security Center: GCSB} and {National Intelligence Service, South Korea} and {National Cyber Security Center, South Korea} and {Australian Cyber Security Center}},
  url = {https://www.cyber.gov.au/resources-business-and-government/maintaining-devices-and-systems/outsourcing-and-procurement/cyber-supply-chains/choosing-secure-and-verifiable-technologies},
  urldate = {2025-03-20},
  langid = {english}
}


@online{OfficeoftheNationalCyberDirector:TheWhiteHouseBackBuilding2024,
  title = {Back to the {{Building Blocks}}: {{A Path Toward Secure}} and {{Measurable Software}}},
  author = {{Office of the National Cyber Director: The White House}},
  date = {2024-02},
  url = {https://www.whitehouse.gov/wp-content/uploads/2024/02/Final-ONCD-Technical-Report.pdf},
  urldate = {2024-02-26}
}

@inproceedings{BagnatoRecommendationCMREC201752022,
  title = {Recommendation {{CM}}/{{REC}}(2017)5 of the {{Council}} of {{Europe}} and an {{Analysis}} of {{eVoting Protocols}}},
  booktitle = {Proceedings of the {{Central}} and {{Eastern European eDem}} and {{eGov Days}}},
  author = {Bagnato, Domenica},
  year = {2022},
  month = oct,
  series = {{{CEEeGov}} '22},
  pages = {169--178},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  doi = {10.1145/3551504.3551519},
  urldate = {2025-03-08},
  abstract = {Electronic voting via the Internet holds a number of promises, particularly in relation to citizens abroad and it may also replace postal voting, which is subject to postal delays and insecure lines of communication. This paper conducts an in-depth analysis of two prominent eVoting protocols, namely the Token protocol and the Envelope protocol explaining their strengths and weaknesses in relation to the Recommendations of the Council of Europe CM/Rec(2017)5. The findings show that Envelope protocols do not fulfil the requirements of the Recommendations, whereas Token protocols can fulfil the requirements, providing certain technical provisions are met.},
  isbn = {978-1-4503-9766-7}
}

@inproceedings{BasinEtAlDisputeResolution2020,
  title = {Dispute {{Resolution}} in {{Voting}}},
  booktitle = {2020 {{IEEE}} 33rd {{Computer Security Foundations Symposium}} ({{CSF}})},
  author = {Basin, David and Radomirovi{\'c}, Sa{\v s}a and Schmid, Lara},
  year = {2020},
  month = jun,
  pages = {1--16},
  issn = {2374-8303},
  doi = {10.1109/CSF49147.2020.00009},
  urldate = {2024-11-18},
  abstract = {In voting, disputes arise when a voter claims that the voting authority is dishonest and did not correctly process his ballot while the authority claims to have followed the protocol. A dispute can be resolved if any third party can unambiguously determine who is right. We systematically characterize all relevant disputes for a generic, practically relevant, class of voting protocols. Based on our characterization, we propose a new definition of dispute resolution for voting that accounts for the possibility that both voters and the voting authority can make false claims and that voters may abstain from voting.A central aspect of our work is timeliness: a voter should possess the evidence required to resolve disputes no later than the election's end. We characterize what assumptions are necessary and sufficient for timeliness in terms of a communication topology for our voting protocol class. We formalize the dispute resolution properties and communication topologies symbolically. This provides the basis for verification of dispute resolution for a broad class of protocols. To demonstrate the utility of our model, we analyze a mixnet-based voting protocol and prove that it satisfies dispute resolution as well as verifiability and receipt-freeness. To prove our claims, we combine machine-checked proofs with traditional pen-and-paper proofs.},
  keywords = {Algebra,Computer science,Mathematical model,Protocols,Standards,Topology,Voting}
}

@inproceedings{BernhardEtAlAdaptingHelios2011,
  title = {Adapting {{Helios}} for {{Provable Ballot Privacy}}},
  booktitle = {Computer {{Security}} -- {{ESORICS}} 2011},
  author = {Bernhard, David and Cortier, V{\'e}ronique and Pereira, Olivier and Smyth, Ben and Warinschi, Bogdan},
  editor = {Atluri, Vijay and Diaz, Claudia},
  year = {2011},
  pages = {335--354},
  publisher = {Springer},
  address = {Berlin, Heidelberg},
  doi = {10.1007/978-3-642-23822-2_19},
  abstract = {Recent results show that the current implementation of Helios, a practical e-voting protocol, does not ensure independence of the cast votes, and demonstrate the impact of this lack of independence on vote privacy. Some simple fixes seem to be available and security of the revised scheme has been studied with respect to symbolic models.},
  isbn = {978-3-642-23822-2},
  langid = {english},
  keywords = {Encryption Scheme,Proof System,Random Oracle,Random Oracle Model,Vote Scheme}
}

@incollection{BernhardEtAlHowNot2012a,
  title = {How {{Not}} to {{Prove Yourself}}: {{Pitfalls}} of the {{Fiat-Shamir Heuristic}} and {{Applications}} to {{Helios}}},
  shorttitle = {How {{Not}} to {{Prove Yourself}}},
  booktitle = {Advances in {{Cryptology}} -- {{ASIACRYPT}} 2012},
  author = {Bernhard, David and Pereira, Olivier and Warinschi, Bogdan},
  editor = {Hutchison, David and Kanade, Takeo and Kittler, Josef and Kleinberg, Jon M. and Mattern, Friedemann and Mitchell, John C. and Naor, Moni and Nierstrasz, Oscar and Pandu Rangan, C. and Steffen, Bernhard and Sudan, Madhu and Terzopoulos, Demetri and Tygar, Doug and Vardi, Moshe Y. and Weikum, Gerhard and Wang, Xiaoyun and Sako, Kazue},
  year = {2012},
  volume = {7658},
  pages = {626--643},
  publisher = {Springer Berlin Heidelberg},
  address = {Berlin, Heidelberg},
  doi = {10.1007/978-3-642-34961-4_38},
  urldate = {2022-04-13},
  abstract = {The Fiat-Shamir transformation is the most efficient construction of non-interactive zero-knowledge proofs. This paper is concerned with two variants of the transformation that appear but have not been clearly delineated in existing literature. Both variants start with the prover making a commitment. The strong variant then hashes both the commitment and the statement to be proved, whereas the weak variant hashes only the commitment. This minor change yields dramatically different security guarantees: in situations where malicious provers can select their statements adaptively, the weak Fiat-Shamir transformation yields unsound/unextractable proofs. Yet such settings naturally occur in systems when zero-knowledge proofs are used to enforce honest behavior. We illustrate this point by showing that the use of the weak Fiat-Shamir transformation in the Helios cryptographic voting system leads to several possible security breaches: for some standard types of elections, under plausible circumstances, malicious parties can cause the tallying procedure to run indefinitely and even tamper with the result of the election.},
  isbn = {978-3-642-34960-7},
  langid = {english}
}

@book{BishopComputerSecurityArt2018,
  title = {Computer {{Security}}: {{Art}} and {{Science}}},
  shorttitle = {Computer {{Security}}},
  author = {Bishop, Matt},
  year = {2018},
  month = nov,
  edition = {2nd edition},
  publisher = {Addison-Wesley Professional},
  address = {Boston Columbus New York San Francisco Amsterdam ; Cape Town Dubai London Madrid Milan Munich Paris Montreal Toronto Delhi Mexico City S{\~a}o Paulo Sydney Hong Kong Seoul Singapore Taipei Tokyo},
  abstract = {The Comprehensive Guide to Computer Security, Extensively Revised with Newer Technologies, Methods, Ideas, and ExamplesIn this updated guide, University of California at Davis Computer Security Laboratory co-director Matt Bishop offers clear, rigorous, and thorough coverage of modern computer security. Reflecting dramatic growth in the quantity, complexity, and consequences of security incidents, Computer Security, Second Edition, links core principles with technologies, methodologies, and ideas that have emerged since the first edition's publication.Writing for advanced undergraduates, graduate students, and IT professionals, Bishop covers foundational issues, policies, cryptography, systems design, assurance, and much more. He thoroughly addresses malware, vulnerability analysis, auditing, intrusion detection, and best-practice responses to attacks. In addition to new examples throughout, Bishop presents entirely new chapters on availability policy models and attack analysis.Understand computer security goals, problems, and challenges, and the deep links between theory and practiceLearn how computer scientists seek to prove whether systems are secureDefine security policies for confidentiality, integrity, availability, and moreAnalyze policies to reflect core questions of trust, and use them to constrain operations and changeImplement cryptography as one component of a wider computer and network security strategyUse system-oriented techniques to establish effective security mechanisms, defining who can act and what they can doSet appropriate security goals for a system or product, and ascertain how well it meets themRecognize program flaws and malicious logic, and detect attackers seeking to exploit themThis is both a comprehensive text, explaining the most fundamental and pervasive aspects of the field, and a detailed reference. It will help you align security concepts with realistic policies, successfully implement your policies, and thoughtfully manage the trade-offs that inevitably arise.Register your book for convenient access to downloads, updates, and/or corrections as they become available. See inside book for details.},
  isbn = {978-0-321-71233-2},
  langid = {english}
}

@article{BlanchetModelingVerifyingSecurity2016,
  title = {Modeling and {{Verifying Security Protocols}} with the {{Applied Pi Calculus}} and {{ProVerif}}},
  author = {Blanchet, Bruno},
  date = {2016-10-30},
  journaltitle = {Foundations and Trends® in Privacy and Security},
  shortjournal = {SEC},
  volume = {1},
  number = {1-2},
  pages = {1--135},
  publisher = {Now Publishers, Inc.},
  issn = {2474-1558, 2474-1566},
  doi = {10.1561/3300000004},
  url = {https://www.nowpublishers.com/article/Details/SEC-004},
  urldate = {2025-03-15},
  abstract = {Modeling and Verifying Security Protocols with the Applied Pi Calculus and ProVerif},
  langid = {english}
}

@online{MicrosoftSecuritySTRIDEChart2007,
  title = {{{STRIDE}} Chart},
  author = {{Microsoft Security}},
  date = {2007-09-12T02:18:00+00:00},
  url = {https://www.microsoft.com/en-us/security/blog/2007/09/11/stride-chart/},
  urldate = {2025-01-12},
  abstract = {There are good reasons to optimize for different points on that spectrum (of better/faster/cheaper) at different times in different products.},
  langid = {american},
  organization = {Microsoft Security Blog}
}

@unpublished{BruceSchneierAttackTrees1999,
  title = {Attack {{Trees}}},
  author = {{Bruce Schneier}},
  date = {1999-10},
  url = {https://tnlandforms.us/cs594-cns96/attacktrees.pdf},
  urldate = {2023-01-16},
  venue = {New Orleans, Louisiana}
}

@inproceedings{CetinkayaAnalysisSecurity2008,
  title = {Analysis of {{Security Requirements}} for {{Cryptographic Voting Protocols}} ({{Extended Abstract}})},
  booktitle = {2008 {{Third International Conference}} on {{Availability}}, {{Reliability}} and {{Security}}},
  author = {Cetinkaya, Orhan},
  year = {2008},
  month = mar,
  pages = {1451--1456},
  publisher = {IEEE Computer Society},
  doi = {10.1109/ARES.2008.167},
  urldate = {2024-11-19},
  abstract = {Electronic voting refers to the use of computers or computerized voting equipment to cast ballots in an election and it is not an easy task due to the need of achieving electronic voting security requirements. The cryptographic voting protocols use advanced cryptography to make electronic voting secure and applicable.In this paper, formal definitions of security requirements for cryptographic voting protocols (privacy, eligibility, uniqueness, fairness, uncoercibility, receipt-freeness, accuracy, and individual verifiability) are provided, and elaborate checklists for each requirement are presented. The voting problem is clearly defined in terms of security requirements. The voting problem arises from the trade-off between receipt-freeness and individual verifiability. This paper suggests the Predefined Fake Vote (PreFote) scheme as an applicable solution to overcome the voting problem. The PreFote scheme is not a voting protocol; however, it is a building block that can be used by any voting protocol.},
  isbn = {978-0-7695-3102-1},
  langid = {english}
}

@book{CommitteeontheFutureofVoting:AccessibleReliableVerifiableTechnologySecuringVoteProtecting2018,
  ids = {CommitteeontheFutureofVotingAccessibleReliableVerifiableTechnologySecuringVoteProtecting2018a,CommitteeontheFutureofVotingAccessibleReliableVerifiableTechnologySecuringVoteProtecting2018b},
  title = {Securing the {{Vote}}: {{Protecting American Democracy}}},
  shorttitle = {Securing the {{Vote}}},
  author = {{Committee on the Future of Voting: Accessible, Reliable, Verifiable Technology} and {Committee on Science, Technology, and Law} and {Policy and Global Affairs} and {Computer Science and Telecommunications Board} and {Division on Engineering and Physical Sciences} and {National Academies of Sciences, Engineering, and Medicine}},
  year = {2018},
  month = aug,
  publisher = {National Academies Press},
  address = {Washington, D.C.},
  doi = {10.17226/25120},
  urldate = {2018-10-15},
  isbn = {978-0-309-47647-8},
  langid = {english}
}

@inproceedings{ChevalSAPICprotocolverifiers2022,
  title = {\{\vphantom\}{{SAPIC}}+\vphantom\{\}: Protocol Verifiers of the World, Unite!},
  shorttitle = {\{\vphantom\}{{SAPIC}}+\vphantom\{\}},
  author = {Cheval, Vincent and Jacomme, Charlie and Kremer, Steve and Künnemann, Robert},
  date = {2022},
  pages = {3935--3952},
  url = {https://www.usenix.org/conference/usenixsecurity22/presentation/cheval},
  urldate = {2025-03-15},
  eventtitle = {31st {{USENIX Security Symposium}} ({{USENIX Security}} 22)},
  isbn = {978-1-939133-31-1},
  langid = {english}
}

@book{DanBonehGraduateCourseApplied2023,
  title = {A {{Graduate Course}} in {{Applied Cryptography}}},
  author = {{Dan Boneh} and {Victor Shoup}},
  year = {2023},
  month = jan,
  edition = {Version 0.6},
  urldate = {2025-03-09}
}

@inproceedings{DelauneEtAlCoercionresistanceReceiptfreeness2006,
  title = {Coercion-Resistance and Receipt-Freeness in Electronic Voting},
  booktitle = {19th {{IEEE Computer Security Foundations Workshop}} ({{CSFW}}'06)},
  author = {Delaune, S. and Kremer, S. and Ryan, M.},
  year = {2006},
  month = jul,
  pages = {12 pp.-42},
  issn = {2377-5459},
  doi = {10.1109/CSFW.2006.8},
  urldate = {2024-11-19},
  abstract = {In this paper we formally study important properties of electronic voting protocols. In particular we are interested in coercion-resistance and receipt-freeness. Intuitively, an election protocol is coercion-resistant if a voter A cannot prove to a potential coercer C that she voted in a particular way. We assume that A cooperates with C in an interactive fashion. Receipt-freeness is a weaker property, for which we assume that A and C cannot interact during the protocol: to break receipt-freeness, A later provides evidence (the receipt) of how she voted. While receipt-freeness can be expressed using observational equivalence from the applied pi calculus, we need to introduce a new relation to capture coercion-resistance. Our formalization of coercion-resistance and receipt-freeness are quite different. Nevertheless, we show in accordance with intuition that coercion-resistance implies receipt-freeness, which implies privacy, the basic anonymity property of voting protocols, as defined in previous work. Finally we illustrate the definitions on a simplified version of the Lee et al. voting protocol},
  keywords = {Calculus,Computer science,Concurrent computing,Electronic voting,Large-scale systems,Natural languages,Nominations and elections,Privacy,Protocols,Research and development}
}

@book{DeogunSecureDesign2019,
  title = {Secure {{By Design}}},
  author = {Deogun, Daniel and Johnsson, Dan Bergh and Sawano, Daniel},
  year = {2019},
  month = sep,
  edition = {First Edition},
  publisher = {Manning},
  address = {Shelter Island, NY},
  abstract = {Summary Secure by Design teaches developers how to use design to drive security in software development. This book is full of patterns, best practices, and mindsets that you can directly apply to your real world development. You'll also learn to spot weaknesses in legacy code and how to address them.  Purchase of the print book includes a free eBook in PDF, Kindle, and ePub formats from Manning Publications.  About the technology Security should be the natural outcome of your development process. As applications increase in complexity, it becomes more important to bake security-mindedness into every step. The secure-by-design approach teaches best practices to implement essential software features using design as the primary driver for security.  About the book Secure by Design teaches you principles and best practices for writing highly secure software. At the code level, you'll discover security-promoting constructs like safe error handling, secure validation, and domain primitives. You'll also master security-centric techniques you can apply throughout your build-test-deploy pipeline, including the unique concerns of modern microservices and cloud-native designs.  What's inside  Secure-by-design concepts Spotting hidden security problems Secure code constructs Assessing security by identifying common design flaws Securing legacy and microservices architectures About the reader Readers should have some experience in designing applications in Java, C\#, .NET, or a similar language.  About the author Dan Bergh Johnsson, Daniel Deogun, and Daniel Sawano are acclaimed speakers who often present at international conferences on topics of high-quality development, as well as security and design.},
  isbn = {978-1-61729-435-8},
  langid = {english}
}

@book{Dzieduszycka-SuinatFutureVotingEndtoEnd2015a,
  title = {The {{Future}} of {{Voting}}: {{End-to-End Verifiable Internet Voting}}---{{Specification}} and {{Feasibility Assessment Study}}},
  author = {{Dzieduszycka-Suinat}, Susan and Murray, Judy and Kiniry, Joseph R and Zimmerman, Daniel M and Wagner, Daniel and Robinson, Philip and Foltzer, Adam and Morina, Shpatar},
  year = {2015},
  month = jul,
  publisher = {The U.S. Vote Foundation},
  langid = {english}
}

@online{ElectoralCouncilofAustralia&NewZealandElevenEssential2017,
  title = {Eleven {{Essential Principles}} for an {{Australian Internet Voting Service}}},
  author = {{Electoral Council of Australia \& New Zealand}},
  date = {2017-07-04},
  url = {https://www.ecanz.gov.au/sites/default/files/2023-10/Eleven%20essential%20principles%20for%20an%20Australian%20internet%20voting%20service.pdf},
  urldate = {2025-03-08}
}

@book{FergusonCryptographyEngineeringDesign2010,
  title = {Cryptography {{Engineering}}: {{Design Principles}} and {{Practical Applications}}},
  shorttitle = {Cryptography {{Engineering}}},
  author = {Ferguson, Niels and Schneier, Bruce and Kohno, Tadayoshi},
  year = {2010},
  month = mar,
  edition = {1st edition},
  publisher = {Wiley},
  address = {Indianapolis, IN},
  abstract = {The ultimate guide to cryptography, updated from an author team of the world's top cryptography experts.Cryptography is vital to keeping information safe, in an era when the formula to do so becomes more and more challenging. Written by a team of world-renowned cryptography experts, this essential guide is the definitive introduction to all major areas of cryptography: message security, key negotiation, and key management. You'll learn how to think like a cryptographer. You'll discover techniques for building cryptography into products from the start and you'll examine the many technical changes in the field.After a basic overview of cryptography and what it means today, this indispensable resource covers such topics as block ciphers, block modes, hash functions, encryption modes, message authentication codes, implementation issues, negotiation protocols, and more. Helpful examples and hands-on exercises enhance your understanding of the multi-faceted field of cryptography.An author team of internationally recognized cryptography experts updates you on vital topics in the field of cryptographyShows you how to build cryptography into products from the startExamines updates and changes to cryptographyIncludes coverage on key servers, message security, authentication codes, new standards, block ciphers, message authentication codes, and moreCryptography Engineering gets you up to speed in the ever-evolving field of cryptography.},
  isbn = {978-0-470-47424-2},
  langid = {english}
}

@online{GroeneveldMasteringSTRIDE,
  title = {Mastering {{STRIDE}}: {{Advanced Threat Modeling}} for {{Systemic Security}}: {{Comprehensive Strategies}} for {{Identifying}}, {{Analyzing}}, and {{Mitigating Cyber Threats}}},
  shorttitle = {Mastering {{STRIDE}}},
  author = {Groeneveld, Niels},
  url = {https://www.amazon.com/Mastering-STRIDE-Comprehensive-Strategies-Identifying-ebook/dp/B0DNBLPRZ1},
  urldate = {2025-03-20},
  abstract = {This definitive guide explores the STRIDE methodology for advanced threat modeling, equipping professionals with tools to identify, prioritize, and mitigate risks across complex systems. Packed with real-world applications, case studies, and actionable insights, it’s an essential resource for securing modern infrastructures. A must-read for cybersecurity experts and architects.},
  langid = {english}
}


@article{HainesEtAlSoKSecure2023,
  title = {{{SoK}}: {{Secure E-Voting}} with {{Everlasting Privacy}}},
  shorttitle = {{{SoK}}},
  author = {Haines, Thomas and Mosaheb, Rafieh and M{\"u}ller, Johannes and Pryvalov, Ivan},
  year = {2023},
  journal = {Proceedings on Privacy Enhancing Technologies},
  issn = {2299-0984},
  doi = {10.56553/popets-2023-0017},
  urldate = {2024-09-18}
}

@inproceedings{HaldermanNewSouthWales2015a,
  title = {The {{New South Wales iVote System}}: {{Security Failures}} and {{Verification Flaws}} in a {{Live Online Election}}},
  shorttitle = {The {{New South Wales iVote System}}},
  booktitle = {E-{{Voting}} and {{Identity}}},
  author = {Halderman, J. Alex and Teague, Vanessa},
  editor = {Haenni, Rolf and Koenig, Reto E. and Wikstr{\"o}m, Douglas},
  year = {2015},
  pages = {35--53},
  publisher = {Springer International Publishing},
  address = {Cham},
  doi = {10.1007/978-3-319-22270-7_3},
  abstract = {In the world's largest-ever deployment of online voting, the iVote Internet voting system was trusted for the return of 280,000 ballots in the 2015 state election in New South Wales, Australia. During the election, we performed an independent security analysis of parts of the live iVote system and uncovered severe vulnerabilities that could be leveraged to manipulate votes, violate ballot privacy, and subvert the verification mechanism. These vulnerabilities do not seem to have been detected by the election authorities before we disclosed them, despite a pre-election security review and despite the system having run in a live state election for five days. One vulnerability, the result of including analytics software from an insecure external server, exposed some votes to complete compromise of privacy and integrity. At least one parliamentary seat was decided by a margin much smaller than the number of votes taken while the system was vulnerable. We also found protocol flaws, including vote verification that was itself susceptible to manipulation. This incident underscores the difficulty of conducting secure elections online and carries lessons for voters, election officials, and the e-voting research community.},
  isbn = {978-3-319-22270-7},
  langid = {english}
}

@article{IdreesModelSystemAdversary2014,
  title = {Model the {{System}} from {{Adversary Viewpoint}}: {{Threats Identification}} and {{Modeling}}},
  shorttitle = {Model the {{System}} from {{Adversary Viewpoint}}},
  author = {Idrees, Muhammad Sabir and Roudier, Yves and Apvrille, Ludovic},
  year = {2014},
  month = oct,
  journal = {Electronic Proceedings in Theoretical Computer Science},
  volume = {165},
  eprint = {1410.4305},
  pages = {45--58},
  issn = {2075-2180},
  doi = {10.4204/EPTCS.165.4},
  urldate = {2021-04-13},
  abstract = {Security attacks are hard to understand, often expressed with unfriendly and limited details, making it difficult for security experts and for security analysts to create intelligible security specifications. For instance, to explain Why (attack objective), What (i.e., system assets, goals, etc.), and How (attack method), adversary achieved his attack goals. We introduce in this paper a security attack meta-model for our SysML-Sec framework, developed to improve the threat identification and modeling through the explicit representation of security concerns with knowledge representation techniques. Our proposed meta-model enables the specification of these concerns through ontological concepts which define the semantics of the security artifacts and introduced using SysML-Sec diagrams. This meta-model also enables representing the relationships that tie several such concepts together. This representation is then used for reasoning about the knowledge introduced by system designers as well as security experts through the graphical environment of the SysML-Sec framework.},
  archiveprefix = {arXiv},
  keywords = {Computer Science - Cryptography and Security,Computer Science - Software Engineering,Electrical Engineering and Systems Science - Systems and Control}
}

@techreport{JointTaskForceTransformationInitiativeGuideconductingrisk2012,
  title = {Guide for Conducting Risk Assessments},
  author = {{Joint Task Force Transformation Initiative}},
  year = {2012},
  edition = {0},
  number = {NIST SP 800-30r1},
  pages = {NIST SP 800-30r1},
  address = {Gaithersburg, MD},
  institution = {{National Institute of Standards and Technology}},
  doi = {10.6028/NIST.SP.800-30r1},
  urldate = {2025-03-08},
  langid = {english}
}

@book{KatzIntroductionModernCryptography2007,
  title = {Introduction to {{Modern Cryptography}}: {{Principles}} and {{Protocols}}},
  shorttitle = {Introduction to {{Modern Cryptography}}},
  author = {Katz, Jonathan and Lindell, Yehuda},
  year = {2007},
  month = aug,
  edition = {1st edition},
  publisher = {{Chapman and Hall/CRC}},
  address = {Boca Raton, Fla.},
  abstract = {Cryptography plays a key role in ensuring the privacy and integrity of data and the security of computer networks. Introduction to Modern Cryptography provides a rigorous yet accessible treatment of modern cryptography, with a focus on formal definitions, precise assumptions, and rigorous proofs.The authors introduce the core principles of modern cryptography, including the modern, computational approach to security that overcomes the limitations of perfect secrecy. An extensive treatment of private-key encryption and message authentication follows. The authors also illustrate design principles for block ciphers, such as the Data Encryption Standard (DES) and the Advanced Encryption Standard (AES), and present provably secure constructions of block ciphers from lower-level primitives. The second half of the book focuses on public-key cryptography, beginning with a self-contained introduction to the number theory needed to understand the RSA, Diffie-Hellman, El Gamal, and other cryptosystems. After exploring public-key encryption and digital signatures, the book concludes with a discussion of the random oracle model and its applications.Serving as a textbook, a reference, or for self-study, Introduction to Modern Cryptography presents the necessary tools to fully understand this fascinating subject.},
  isbn = {978-1-58488-551-1},
  langid = {english}
}

@inproceedings{KiniryFormallyCountingElectronic2007,
  title = {Formally {{Counting Electronic Votes}} ({{But Still Only Trusting Paper}})},
  booktitle = {12th {{IEEE International Conference}} on {{Engineering Complex Computer Systems}} ({{ICECCS}} 2007)},
  author = {Kiniry, Joeseph},
  year = {2007},
  month = jul,
  pages = {261--269},
  doi = {10.1109/ICECCS.2007.24},
  urldate = {2025-03-11},
  abstract = {In this extended abstract we summarize our consulting work, scientific research, and activism in the topic of electronic (computer-based) voting. The Dutch and Irish government's activities are our particular focus, as is the Kiezen op Afstand (KOA) system, an experimental platform for electronic voting research with formal methods. We also reflect on the current state of affairs in The Netherlands and Ireland, and discuss next research steps in trustworthy, verified electronic voting systems.},
  keywords = {Adaptive systems,Computer science,Educational institutions,Electronic voting,Electronic voting systems,Government,Informatics,Laboratories,Nominations and elections,Protocols}
}

@inproceedings{KiniryKOARemoteVoting2007,
  title = {The {{KOA Remote Voting System}}: {{A Summary}} of {{Work}} to {{Date}}},
  shorttitle = {The {{KOA Remote Voting System}}},
  booktitle = {Trustworthy {{Global Computing}}},
  author = {Kiniry, Joseph R. and Morkan, Alan E. and Cochran, Dermot and Fairmichael, Fintan and Chalin, Patrice and Oostdijk, Martijn and Hubbers, Engelbert},
  editor = {Montanari, Ugo and Sannella, Donald and Bruni, Roberto},
  year = {2007},
  pages = {244--262},
  publisher = {Springer},
  address = {Berlin, Heidelberg},
  doi = {10.1007/978-3-540-75336-0_16},
  abstract = {Remote internet voting incorporates many of the core challenges of trusted global computing. In this paper, we present the Kiezen op Afstand (KOA) system. KOA is a Free Software, remote voting system developed for the Dutch government in 2003/2004. In addition to being Open Source, it is also partially formally specified and verified. This paper summarises the work carried out to date on the KOA system. It charts the evolution of the system, from its initial conception by the Dutch Government, through to its current status. It also describes a roadmap of milestones towards completing its next release: a Free Software, general-purpose, formally specified and verified internet voting system, that incorporates Proof Carrying Code technology for software update and allows trustworthy voting from a mobile phone. We propose that the KOA system should be used as an experimental platform for research in electronic and internet voting; we are not saying that we have solved any of the major problems inherent in voting with computers.},
  isbn = {978-3-540-75336-0},
  langid = {english}
}

@inproceedings{KremerEtAlElectionVerifiability2010,
  title = {Election {{Verifiability}} in {{Electronic Voting Protocols}}},
  booktitle = {Computer {{Security}} -- {{ESORICS}} 2010},
  author = {Kremer, Steve and Ryan, Mark and Smyth, Ben},
  editor = {Gritzalis, Dimitris and Preneel, Bart and Theoharidou, Marianthi},
  year = {2010},
  pages = {389--404},
  publisher = {Springer},
  address = {Berlin, Heidelberg},
  doi = {10.1007/978-3-642-15497-3_24},
  abstract = {We present a formal, symbolic definition of election verifiability for electronic voting protocols in the context of the applied pi calculus. Our definition is given in terms of boolean tests which can be performed on the data produced by an election. The definition distinguishes three aspects of verifiability: individual, universal and eligibility verifiability. It also allows us to determine precisely which aspects of the system's hardware and software must be trusted for the purpose of election verifiability. In contrast with earlier work our definition is compatible with a large class of electronic voting schemes, including those based on blind signatures, homomorphic encryption and mixnets. We demonstrate the applicability of our formalism by analysing three protocols: FOO, Helios 2.0, and Civitas (the latter two have been deployed).},
  isbn = {978-3-642-15497-3},
  langid = {english},
  keywords = {Blind Signature,Bulletin Board,Homomorphic Encryption,Public Credential,Vote System}
}

@inproceedings{KustersEtAlClashAttacks2012,
  title = {Clash {{Attacks}} on the {{Verifiability}} of {{E-Voting Systems}}},
  booktitle = {2012 {{IEEE Symposium}} on {{Security}} and {{Privacy}}},
  author = {Kusters, Ralf and Truderung, Tomasz and Vogt, Andreas},
  year = {2012},
  month = may,
  pages = {395--409},
  issn = {2375-1207},
  doi = {10.1109/SP.2012.32},
  urldate = {2025-01-12},
  abstract = {Verifiability is a central property of modern e-voting systems. Intuitively, verifiability means that voters can check that their votes were actually counted and that the published result of the election is correct, even if the voting machines/authorities are (partially) untrusted. In this paper, we raise awareness of a simple attack, which we call a clash attack, on the verifiability of e-voting systems. The main idea behind this attack is that voting machines manage to provide different voters with the same receipt. As a result, the voting authorities can safely replace ballots by new ballots, and by this, manipulate the election without being detected. This attack does not seem to have attracted much attention in the literature. Even though the attack is quite simple, we show that, under reasonable trust assumptions, it applies to several e-voting systems that have been designed to provide verifiability. In particular, we show that it applies to the prominent Three Ballot and VAV voting systems as well as to two e-voting systems that have been deployed in real elections: the Wombat Voting system and a variant of the Helios voting system. We discuss countermeasures for each of these systems and for (various variants of) Helios provide a formal analysis based on a rigorous definition of verifiability. More precisely, our analysis of Helios is with respect to the more general and in the area of e-voting often overlooked notion of accountability.},
  keywords = {accountability,Browsers,Educational institutions,Electronic voting,Encryption,Nominations and elections,protocol analysis,verifiability,voting}
}

@inproceedings{KustersEtAlOrdinosVerifiable2020,
  title = {Ordinos: {{A Verifiable Tally-Hiding E-Voting System}}},
  shorttitle = {Ordinos},
  booktitle = {2020 {{IEEE European Symposium}} on {{Security}} and {{Privacy}} ({{EuroS}}\&{{P}})},
  author = {K{\"u}sters, Ralf and Liedtke, Julian and M{\"u}ller, Johannes and Rausch, Daniel and Vogt, Andreas},
  year = {2020},
  month = sep,
  pages = {216--235},
  doi = {10.1109/EuroSP48549.2020.00022},
  urldate = {2025-01-12},
  abstract = {Modern electronic voting systems (e-voting systems) are designed to provide not only vote privacy but also (end-to-end) verifiability. Several verifiable e-voting systems have been proposed in the literature, with Helios being one of the most prominent ones. Almost all such systems, however, reveal not just the voting result but also the full tally, consisting of the exact number of votes per candidate or even all single votes. There are several situations where this is undesirable. For example, in elections with only a few voters (e.g., boardroom or jury votings), revealing the complete tally leads to a low privacy level, possibly deterring voters from voting for their actual preference. In other cases, revealing the complete tally might unnecessarily embarrass some candidates. Often, the voting result merely consists of a single winner or a ranking of candidates, so revealing only this information but not the complete tally is sufficient. This property is called tally-hiding and it offers completely new options for e-voting. In this paper, we propose the first provably secure end-to-end verifiable tally-hiding e-voting system, called Ordinos. We instantiated our system with suitable cryptographic primitives, including an MPC protocol for greater-than tests, implemented the system, and evaluated its performance, demonstrating its practicality. Moreover, our work provides a deeper understanding of tally-hiding in general, in particular in how far tally-hiding affects the levels of privacy and verifiability of e-voting systems.},
  keywords = {Cryptography,Electronic voting,Electronic voting systems,Privacy,Protocols}
}

@inproceedings{MeierTAMARINProverSymbolic2013,
  title = {The {{TAMARIN Prover}} for the {{Symbolic Analysis}} of {{Security Protocols}}},
  booktitle = {Computer {{Aided Verification}}},
  author = {Meier, Simon and Schmidt, Benedikt and Cremers, Cas and Basin, David},
  editor = {Sharygina, Natasha and Veith, Helmut},
  date = {2013},
  pages = {696--701},
  publisher = {Springer},
  location = {Berlin, Heidelberg},
  doi = {10.1007/978-3-642-39799-8_48},
  abstract = {The Tamarin prover supports the automated, unbounded, symbolic analysis of security protocols. It features expressive languages for specifying protocols, adversary models, and properties, and support for efficient deduction and equational reasoning. We provide an overview of the tool and its applications.},
  isbn = {978-3-642-39799-8},
  langid = {english},
  keywords = {Adversary Model,Bilinear Pairing,Equational Theory,Message Authentication Code,Security Protocol}
}

@online{TheWhiteHouseNationalCybersecurity2023,
  title = {National {{Cybersecurity Strategy Implementation Plan}}},
  author = {{The White House}},
  date = {2023-07},
  url = {https://www.whitehouse.gov/wp-content/uploads/2023/07/National-Cybersecurity-Strategy-Implementation-Plan-WH.gov_.pdf},
  urldate = {2024-06-27}
}

@online{TheWhiteHouseNationalCybersecurity2023a,
  title = {National {{Cybersecurity Strategy}}},
  author = {{The White House}},
  date = {2023-05},
  url = {https://www.whitehouse.gov/wp-content/uploads/2023/03/National-Cybersecurity-Strategy-2023.pdf},
  urldate = {2024-06-27}
}

@online{TheWhiteHouseNationalCybersecurity2024,
  title = {National {{Cybersecurity Implementation Plan}}},
  author = {{The White House}},
  date = {2024-05},
  number = {Version 2},
  url = {https://www.whitehouse.gov/wp-content/uploads/2024/05/NCSIP-Version-2-FINAL-May-2024.pdf},
  urldate = {2024-06-27}
}

@thesis{NguyenAutomatedAttack2020,
  type = {M.Eng. Thesis},
  title = {Automated {{Attack Tree Generation}} and {{Evaluation}}: {{Systemization}} of {{Knowledge}}},
  author = {Nguyen, Sam},
  date = {2020},
  institution = {Massachusetts Institute of Technology},
  location = {Cambridge, Massachusetts},
  url = {https://dspace.mit.edu/handle/1721.1/129214},
  abstract = {The large scale infrastructure that modern society is dependent on has become more and more dependent on the computer systems that control it. Examples like electrical grids, water systems, or power plants all contribute heavily towards everyday function. Even though these systems have such importance, they have been repeatedly shown to be vulnerable to attacks. Cybersecurity research has shown that each month one in every five industrial control systems is attacked. A long-term concerted attack campaign to control or shutdown these systems could lead to disastrous results such as shutting down a power grid.},
  langid = {english},
  keywords = {⛔ No DOI found}
}

@techreport{PeterLoscoccoAssumptionDrivenDesignStrategy,
  type = {Tech {{Report}}},
  title = {Assumption-{{Driven Design}}: {{A Strategy}} for {{Critical Thinking}} in {{Trusted Systems Design}}},
  author = {{Peter Loscocco} and {Machon Gregory} and {Robert Meushaw}},
  number = {2018-2},
  address = {National Security Agency},
  institution = {CERIAS},
  urldate = {2023-01-26}
}

@book{EuroparatStandardsEvoting2018,
  title = {Standards for E-Voting: {{Recommendation CM}}/{{Rec}}(2017)5 Adopted by the {{Committee}} of {{Ministers}} of the {{Council}} of {{Europe}} on 31 {{May}} 2017, Guidelines and Explanatory Memorandum},
  shorttitle = {Standards for E-Voting},
  author = {{Europarat}},
  date = {2018},
  series = {Recommendation / {{Committee}} of {{Ministers}} of the {{Council}} of {{Europe}}},
  number = {CM/Rec 2017,5},
  publisher = {Council of Europe},
  location = {Strasbourg},
  isbn = {978-92-871-8568-6},
  langid = {english},
  pagetotal = {85}
}

@incollection{RivestVirzaSoftwareIndependence2016,
  title = {Software {{Independence Revisited}}},
  booktitle = {Real-{{World Electronic Voting}}},
  author = {Rivest, Ronald L and Virza, Madars},
  year = {2016},
  publisher = {Auerbach Publications},
  keywords = {Verifiability}
}

@inproceedings{Rodriguez-PerezCouncilEuropesCM2022,
  title = {The {{Council}} of {{Europe}}'s {{CM}}/{{Rec}}(2017)5 on {{E-voting}} and {{Secret Suffrage}}: {{Time}} for {{Yet Another Update}}?},
  shorttitle = {The {{Council}} of {{Europe}}'s {{CM}}/{{Rec}}(2017)5 on e-Voting and {{Secret Suffrage}}},
  booktitle = {Electronic {{Voting}}},
  author = {{Rodr{\'i}guez-P{\'e}rez}, Adri{\`a}},
  editor = {Krimmer, Robert and Volkamer, Melanie and {Duenas-Cid}, David and R{\o}nne, Peter and Germann, Micha},
  year = {2022},
  pages = {90--105},
  publisher = {Springer International Publishing},
  address = {Cham},
  doi = {10.1007/978-3-031-15911-4_6},
  abstract = {The Council of Europe's Recommendation CM/Rec(2017)5 on e-voting remains the main international legal standard in the field. According to the updated Recommendation, e-voting should respect all the principles for democratic elections. This includes, of course, the principle of secret suffrage. Provisions on secret suffrage are dispersed throughout Rec(2017)5 and its related documents. The main provisions can be found in Section IV of Appendix I, but the principle is also mentioned in several other sections, in the Explanatory Memorandum, and in the Guidelines. A detailed analysis of all these provisions reveals important flaws in the understanding of secret suffrage in (remote) e-voting. Some of the flaws are the result of an inaccurate understanding of secret suffrage, in which this principle is mixed with provisions on personal data protection. In other cases, the flaws are due to analogies being drawn with paper-based voting channels, which prevent the standards from taking stock of the specificities of (remote) e-voting. In this paper I provide a detailed account of these flaws. I also suggest some alternative approaches and wording for the provisions on secret suffrage. Lastly, I discuss the desirability and feasibility of different alternatives regarding the review of Rec(2017)5.},
  isbn = {978-3-031-15911-4},
  langid = {english},
  keywords = {International standards,Remote electronic voting,Secret suffrage}
}

@article{SampigethayaPoovendranFrameworkTaxonomy2006,
  title = {A Framework and Taxonomy for Comparison of Electronic Voting Schemes},
  author = {Sampigethaya, Krishna and Poovendran, Radha},
  year = {2006},
  month = mar,
  journal = {Computers \& Security},
  volume = {25},
  number = {2},
  pages = {137--153},
  issn = {01674048},
  doi = {10.1016/j.cose.2005.11.003},
  urldate = {2024-11-19},
  abstract = {Electronic voting is an emerging social application of cryptographic protocols. A vast amount of literature on electronic voting has been developed over the last two decades. In this paper, we provide a framework that classifies these approaches and defines a set of metrics under which their properties can be compared. Such a methodology reveals important differences in security properties between the classes and allows for selection and future design of voting schemes, based on application requirements. We illustrate the use of our framework by analyzing some of the existing electronic voting schemes.},
  copyright = {https://www.elsevier.com/tdm/userlicense/1.0/},
  langid = {english}
}

@book{ShostackThreatmodelingdesigning2014,
  title = {Threat Modeling: Designing for Security},
  shorttitle = {Threat Modeling},
  author = {Shostack, Adam},
  year = {2014},
  publisher = {Wiley},
  address = {Indianapolis, IN},
  abstract = {"Adam Shostack is responsible for security development lifecycle threat modeling at Microsoft and is one of a handful of threat modeling experts in the world. Now, he is sharing his considerable expertise into this unique book. With pages of specific actionable advice, he details how to build better security into the design of systems, software, or services from the outset. You'll explore various threat modeling approaches, find out how to test your designs against threats, and learn effective ways to address threats that have been validated at Microsoft and other top companies."--},
  isbn = {978-1-118-80999-0},
  lccn = {QA76.9.A25 S495 2014},
  keywords = {Computer networks,Computer networks / Security measures,Computer security,Computer software,Computer software / Development,Computersicherheit,Development,Security measures,Software Engineering},
  annotation = {OCLC: ocn855043351}
}

@inproceedings{SpecterEtAlBallotBusted2020,
  title = {The {{Ballot}} Is {{Busted Before}} the {{Blockchain}}: {{A Security Analysis}} of {{Voatz}}, the {{First Internet Voting Application Used}} in {{U}}.{{S}}. {{Federal Elections}}},
  shorttitle = {The {{Ballot}} Is {{Busted Before}} the {{Blockchain}}},
  author = {Specter, Michael A. and Koppel, James and Weitzner, Daniel},
  date = {2020},
  pages = {1535--1553},
  url = {https://www.usenix.org/conference/usenixsecurity20/presentation/specter},
  urldate = {2025-03-04},
  eventtitle = {29th {{USENIX Security Symposium}} ({{USENIX Security}} 20)},
  isbn = {978-1-939133-17-5},
  langid = {english}
}


@inproceedings{SpecterSecurityAnalysisDemocracy2021,
  title = {Security {{Analysis}} of the {{Democracy Live Online Voting System}}},
  booktitle = {30th {{USENIX Security Symposium}} ({{USENIX Security}} 21)},
  author = {Specter, Michael and Halderman, J. Alex},
  year = {2021},
  pages = {3077--3092},
  urldate = {2025-03-04},
  isbn = {978-1-939133-24-3},
  langid = {english}
}

@inproceedings{SpringallSecurityAnalysisEstonian2014,
  title = {Security {{Analysis}} of the {{Estonian Internet Voting System}}},
  booktitle = {Proceedings of the 2014 {{ACM SIGSAC Conference}} on {{Computer}} and {{Communications Security}} - {{CCS}} '14},
  author = {Springall, Drew and Finkenauer, Travis and Durumeric, Zakir and Kitcat, Jason and Hursti, Harri and MacAlpine, Margaret and Halderman, J. Alex},
  year = {2014},
  pages = {703--715},
  publisher = {ACM Press},
  address = {Scottsdale, Arizona, USA},
  doi = {10.1145/2660267.2660315},
  urldate = {2019-08-26},
  isbn = {978-1-4503-2957-6},
  langid = {english}
}

@online{UnitedStatesCybersecurityandInfrastructureSecurityAgencyEtAlCaseMemory2023,
  title = {The {{Case}} for {{Memory Safe Roadmaps}}: {{Why Both C-Suite Executives}} and {{Technical Experts Need}} to {{Take Memory Safe Coding Seriously}}},
  author = {{United States Cybersecurity and Infrastructure Security Agency} and {United States National Security Agency} and {United States Federal Bureau of Investigation} and {Australian Signals Directorate’s Australian Cyber Security Centre} and {Canadian Centre for Cyber Security} and {United Kingdom National Cyber Security Centre} and {New Zealand National Cyber Security Centre} and {Computer Emergency Response Team New Zealand}},
  date = {2023-12},
  url = {https://www.cisa.gov/case-memory-safe-roadmaps},
  urldate = {2024-09-28}
}

@report{DefenseScienceBoardTaskForceUndersecretaryofDefenseforResearchandEngineeringFutureCyberWarfighting2024,
  title = {Future {{Cyber Warfighting Capabilities}} of the {{Department}} of {{Defense}}},
  author = {{Defense Science Board Task Force, Undersecretary of Defense for Research and Engineering}},
  date = {2024-05},
  url = {https://dsb.cto.mil/wp-content/uploads/2024/09/DSB_Cyber_ExecutiveSummary_2Aug24.pdf},
  urldate = {2024-09-23}
}

@report{DefenseScienceBoardTaskForceUndersecretaryofDefenseforResearchandEngineeringSecureElectronicProcessing2025,
  title = {Secure {{Electronic Processing}}: {{Executive Summary}}},
  author = {{Defense Science Board Task Force, Undersecretary of Defense for Research and Engineering}},
  date = {2025-10-19},
  url = {https://dsb.cto.mil/wp-content/uploads/reports/2020s/SecureElectronicProcessing_ExecutiveSummary.pdf},
  urldate = {2024-09-23}
}

@report{DefenseScienceBoardTaskForceUndersecretaryofDefenseforResearchandEngineeringTestEvaluationTE2024,
  title = {Test and {{Evaluation}} ({{T}}\&{{E}})},
  author = {{Defense Science Board Task Force, Undersecretary of Defense for Research and Engineering}},
  date = {2024-08},
  url = {https://dsb.cto.mil/wp-content/uploads/2024/08/DSB_TE-Report_UNCLASS_FINAL_August-2024_Stamped.pdf},
  urldate = {2024-09-23}
}

@online{TheWhiteHouseSummary2023Request2024,
  title = {Summary of the 2023 {{Request}} for {{Information}} on {{Open-Source Software Security}}},
  author = {{The White House}},
  date = {2024-08},
  url = {https://www.whitehouse.gov/wp-content/uploads/2024/08/Summary-of-the-2023-Request-for-Information-on-Open-Source-Software-Security.pdf},
  urldate = {2024-08-14},
  abstract = {This Summary of the 2023 Open-Source Software Security Request for Information Report (RFI) is an outcome of the vast amount of time, energy, and expertise dedicated by U.S. federal government representatives from the Open-Source Software Security Initiative (OS3I). We offer our sincerest gratitude to the technical and policy experts that undertook the analysis of the RFI submissions from the Center for Medicare and Medicaid Services (CMS), Cybersecurity and Infrastructure Security Agency (CISA), Defense Advanced Research Projects Agency (DARPA), Department of Homeland Security (DHS), General Services Administration (GSA), Lawrence Livermore National Laboratory (LLNL), National Institutes of Standards and Technology (NIST), National Science Foundation (NSF), National Security Agency (NSA), Office of the Director of National Intelligence (ODNI), Office of Management and Budget (OMB), Office of the National Cyber Director (ONCD), Office of Science \& Technology Policy (OSTP), Office of Secretary of Defense, Chief Digital Artificial Intelligence Office - Defense Digital Service (DDS).}
}

@online{CybersecurityandInfrastructureSecurityAgencyCISAEtAlShiftingBalance,
  title = {Shifting the {{Balance}} of {{Cybersecurity Risk}}: {{Principles}} and {{Approaches}} for {{Secure}} by {{Design Software}}},
  author = {{Cybersecurity and Infrastructure Security Agency (CISA)} and {National Security Agency (NSA)} and {Federal Bureau of Investigation (FBI)} and {Australian Cyber Security Centre (ACSC)} and {Canadian Centre for Cyber Security (CCCS)} and {United Kingdom’s National Cyber Security Centre (NCSC-UK)} and {Germany’s Federal Office for Information Security (BSI)} and {Netherlands’ National Cyber Security Centre (NCSC-NL)} and {Norway’s National Cyber Security Center (NCSC-NO)} and {Computer Emergency Response Team New Zealand (CERT NZ)} and {New Zealand’s National Cyber Security Centre (NCSC-NZ)} and {Korea Internet \& Security Agency (KISA)} and {Israel’s National Cyber Directorate (INCD)} and {Japan’s National Center of Incident Readiness and Strategy for Cybersecurity (NISC)} and {Japan Computer Emergency Response Team Coordination Center (JPCERT/CC)} and {OAS/CICTE Network of Government Cyber Incident Response Teams (CSIRT) Americas} and {Cyber Security Agency of Singapore (CSA)} and {Czech Republic’s National Cyber and Information Security Agency (NÚKIB)}},
  url = {https://www.cisa.gov/sites/default/files/2023-10/SecureByDesign_1025_508c.pdf},
  urldate = {2024-06-17}
}

@report{BruterEtAlStudyEVoting2023,
  title = {Study on {{E-Voting}} Practices in the {{EU}}},
  author = {Bruter, Michael and Harrison, Sarah and Vives, Elisabet and Gentile, Giulia},
  date = {2023-07},
  number = {JUST/2021/OP/0002},
  institution = {European Commission},
  url = {https://commission.europa.eu/document/download/23076478-987e-4dea-b9ef-df5e0dfd6cd2_en},
  urldate = {2025-03-08}
}

@online{KonstaSurveyAutomaticGeneration2023,
  title = {A {{Survey}} of {{Automatic Generation}} of {{Attack Trees}} and {{Attack Graphs}}},
  author = {Konsta, Alyzia-Maria and Spiga, Beatrice and Lafuente, Alberto Lluch and Dragoni, Nicola},
  date = {2023-03-02},
  eprint = {2302.14479},
  eprinttype = {arXiv},
  eprintclass = {cs},
  url = {http://arxiv.org/abs/2302.14479},
  urldate = {2023-09-22},
  abstract = {Graphical security models constitute a well-known, user-friendly way to represent the security of a system. These kinds of models are used by security experts to identify vulnerabilities and assess the security of a system. The manual construction of these models can be tedious, especially for large enterprises. Consequently, the research community is trying to address this issue by proposing methods for the automatic generation of such models. In this work, we present a survey illustrating the current status of the automatic generation of two kinds of graphical security models -Attack Trees and Attack Graphs. The goal of this survey is to present the current methodologies used in the field, compare them and present the challenges and future directions for the research community.},
  langid = {english},
  pubstate = {prepublished},
  keywords = {Computer Science - Cryptography and Security}
}

@book{SwiderskiThreatModeling2004,
  title = {Threat {{Modeling}}},
  author = {Swiderski, Frank and Snyder, Window},
  year = {2004},
  month = jul,
  edition = {1st edition},
  publisher = {Microsoft Press},
  address = {Redmond, Wash},
  abstract = {In this straightforward and practical guide, Microsoft{\textregistered} application security specialists Frank Swiderski and Window Snyder describe the concepts and goals for threat modeling---a structured approach for identifying, evaluating, and mitigating risks to system security. Discover how to use the threat modeling methodology to analyze your system from the adversary's point of view---creating a set of data points that help drive security specifications and testing. You'll review application scenarios that illustrate threat modeling concepts in action, understanding how to use threat modeling to help improve the built-in security of a system---as well as your customer's confidence in the security of that system---regardless of development environment.  Gain an in-depth, conceptual understanding---along with practical ways to integrate threat modeling into your development efforts: Help anticipate attacks by seeing how adversaries assess your system---and compare their view to the developer's or architect's view Employ a data flow approach to create a threat profile for a system Reveal vulnerabilities in system architecture and implementation using investigative techniques such as threat trees and threat model-directed code reviews Develop a credible security characterization for modeling threats Use threat modeling to help verify security features and increase the resilience of software systems Increase customer confidence in your products!},
  isbn = {978-0-7356-1991-3},
  langid = {english}
}

@book{TarandachColesThreatModeling2020,
  title = {Threat {{Modeling}}: {{A Practical Guide}} for {{Development Teams}}},
  author = {Tarandach, Izar and Coles, Matthew J.},
  date = {2020-11-12},
  eprint = {acQIEAAAQBAJ},
  eprinttype = {googlebooks},
  publisher = {O'Reilly Media, Inc.},
  abstract = {Threat modeling is one of the most essential--and most misunderstood--parts of the development lifecycle. Whether you're a security practitioner or a member of a development team, this book will help you gain a better understanding of how you can apply core threat modeling concepts to your practice to protect your systems against threats.Contrary to popular belief, threat modeling doesn't require advanced security knowledge to initiate or a Herculean effort to sustain. But it is critical for spotting and addressing potential concerns in a cost-effective way before the code's written--and before it's too late to find a solution. Authors Izar Tarandach and Matthew Coles walk you through various ways to approach and execute threat modeling in your organization.Explore fundamental properties and mechanisms for securing data and system functionalityUnderstand the relationship between security, privacy, and safetyIdentify key characteristics for assessing system securityGet an in-depth review of popular and specialized techniques for modeling and analyzing your systemsView the future of threat modeling and Agile development methodologies, including DevOps automationFind answers to frequently asked questions, including how to avoid common threat modeling pitfalls},
  isbn = {978-1-4920-5652-2},
  langid = {english},
  pagetotal = {245},
  keywords = {Computers / Business & Productivity Software / Business Intelligence,Computers / Information Technology,Computers / Security / Network Security}
}


@techreport{TeagueProblemsiVoteInternet2012,
  title = {Problems with the {{iVote Internet Voting System}}},
  author = {Teague, Vanessa and Wen, Roland},
  year = {2012},
  institution = {{Computing Research and Education Association of Australasia}},
  langid = {english},
  keywords = {⛔ No DOI found}
}

@techreport{TrailofBitsVoatzSecurityAssessment2020,
  title = {Voatz {{Security Assessment}} - {{Volume II}} of {{II}}: {{Threat Modeling Findings}}},
  author = {{Trail of Bits}},
  year = {2020},
  urldate = {2025-03-04}
}

@techreport{TrailofBitsVoatzSecurityAssessment2020a,
  title = {Voatz {{Security Assessment}} - {{Volume I}} of {{II}}: {{Technical Findings}}},
  author = {{Trail of Bits}},
  year = {2020},
  month = mar
}

@online{VerifiedVotingCastingVotesSafely2023,
  title = {Casting {{Votes Safely}}: {{Examining Internet Voting}}'s {{Dangers}} and {{Highlighting Safer Alternatives}}},
  author = {{Verified Voting}},
  url = {https://verifiedvoting.org/publication/casting-votes-safely-oct-2023/},
  year = {2023},
  month = oct,
  urldate = {2025-03-11},
  abstract = {Democracy depends on citizens' trust in our elections, the ability to cast a ballot without obstacles, and having verifiable proof that the winner won and the loser lost. If expanded, internet voting would undermine the fundamental principles of our democracy: private and trustworthy elections that give voters justified confidence that their votes were counted as cast. We address internet voting's dangers and discuss better options that enable voter enfranchisement while still protecting the security of our elections.},
  langid = {english}
}

@online{VerifiedVotingInternet,
  title = {Verified {{Voting Internet Voting FAQ}}},
  author = {Verified Voting},
  url = {https://verifiedvoting.org/internet-voting-faq/},
  urldate = {2025-03-11},
  langid = {american}
}

@online{U.S.ElectionAssistanceCommissionVoluntaryVoting2021,
  title = {Voluntary {{Voting System Guidelines Version}} 2.0},
  author = {{U.S. Election Assistance Commission}},
  date = {2021},
  url = {https://www.eac.gov/sites/default/files/TestingCertification/Voluntary_Voting_System_Guidelines_Version_2_0.pdf},
  urldate = {2025-03-20},
  langid = {english}
}


@incollection{WolchokAttackingWashingtonDC2012,
  title = {Attacking the {{Washington}}, {{D}}.{{C}}. {{Internet Voting System}}},
  booktitle = {Financial {{Cryptography}} and {{Data Security}}},
  author = {Wolchok, Scott and Wustrow, Eric and Isabel, Dawn and Halderman, J. Alex},
  editor = {Keromytis, Angelos D. and Hutchison, David and Kanade, Takeo and Kittler, Josef and Kleinberg, Jon M. and Mattern, Friedemann and Mitchell, John C. and Naor, Moni and Nierstrasz, Oscar and Pandu Rangan, C. and Steffen, Bernhard and Sudan, Madhu and Terzopoulos, Demetri and Tygar, Doug and Vardi, Moshe Y. and Weikum, Gerhard},
  year = {2012},
  volume = {7397},
  pages = {114--128},
  publisher = {Springer Berlin Heidelberg},
  address = {Berlin, Heidelberg},
  doi = {10.1007/978-3-642-32946-3_10},
  urldate = {2021-03-30},
  abstract = {In 2010, Washington, D.C. developed an Internet voting pilot project that was intended to allow overseas absentee voters to cast their ballots using a website. Prior to deploying the system in the general election, the District held a unique public trial: a mock election during which anyone was invited to test the system or attempt to compromise its security. This paper describes our experience participating in this trial. Within 48 hours of the system going live, we had gained nearcomplete control of the election server. We successfully changed every vote and revealed almost every secret ballot. Election officials did not detect our intrusion for nearly two business days --- and might have remained unaware for far longer had we not deliberately left a prominent clue. This case study --- the first (to our knowledge) to analyze the security of a government Internet voting system from the perspective of an attacker in a realistic pre-election deployment --- attempts to illuminate the practical challenges of securing online voting as practiced today by a growing number of jurisdictions.},
  isbn = {978-3-642-32946-3},
  langid = {english},
  annotation = {Series Editors: \_:n47273}
}

@book{WoodyCyberSecurityEngineering2016,
  title = {Cyber {{Security Engineering}}: {{A Practical Approach}} for {{Systems}} and {{Software Assurance}}},
  shorttitle = {Cyber {{Security Engineering}}},
  author = {Mead, Nancy R. and Woody, Carol},
  year = {2016},
  month = oct,
  publisher = {Addison-Wesley Professional},
  address = {Boston Massachusetts},
  abstract = {Cyber Security Engineering is the definitive modern reference and tutorial on the full range of capabilities associated with modern cyber security engineering. Pioneering software assurance experts Dr. Nancy R. Mead and Dr. Carol C. Woody bring together comprehensive best practices for building software systems that exhibit superior operational security, and for considering security throughout your full system development and acquisition lifecycles. Drawing on their pioneering work at the Software Engineering Institute (SEI) and Carnegie Mellon University, Mead and Woody introduce seven core principles of software assurance, and show how to apply them coherently and systematically. Using these principles, they help you prioritize the wide range of possible security actions available to you, and justify the required investments.  Cyber Security Engineering guides you through risk analysis, planning to manage secure software development, building organizational models, identifying required and missing competencies, and defining and structuring metrics. Mead and Woody address important topics, including the use of standards, engineering security requirements for acquiring COTS software, applying DevOps, analyzing malware to anticipate future vulnerabilities, and planning ongoing improvements. This book will be valuable to wide audiences of practitioners and managers with responsibility for systems, software, or quality engineering, reliability, security, acquisition, or operations. Whatever your role, it can help you reduce operational problems, eliminate excessive patching, and deliver software that is more resilient and secure.},
  isbn = {978-0-13-418980-2},
  langid = {english}
}
